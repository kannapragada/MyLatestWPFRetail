<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
                    mc:Ignorable="d">

    
    <!-- *************COLORS START************* -->

        <!-- Theme Base Colors -->

        <!--ACCENT COLORS-->
        <Color x:Key="HighlightDarkColor">#FF119EDA</Color>
        <Color x:Key="HighlightLightColor">#FFB2E0F4</Color>
        <!--80%-->
        <Color x:Key="AccentColor">#CC119EDA</Color>
        <!--60%-->
        <Color x:Key="AccentColor2">#99119EDA</Color>
        <!--40%-->
        <Color x:Key="AccentColor3">#66119EDA</Color>
        <!--20%-->
        <Color x:Key="AccentColor4">#33119EDA</Color>

        <!--BASE COLORS-->
        <Color x:Key="BlackColor">#FF000000</Color>
        <Color x:Key="WhiteColor">#FFFFFFFF</Color>
        <Color x:Key="DarkSlateBlueColor">DarkSlateBlue</Color>
        <Color x:Key="Gray1">#FFCCCCCC</Color>
        <Color x:Key="Gray2">#FF7F7F7F</Color>
        <Color x:Key="Gray3">#FF333333</Color>
        <Color x:Key="Gray4">#FFB9B9B9</Color>
        <Color x:Key="Gray5">#FFD8D8D9</Color>
        <Color x:Key="Gray6">#FF9D9D9D</Color>
        <Color x:Key="Gray7">#FFF7F7F7</Color>
        <Color x:Key="Gray8">#FFE0E0E0</Color>
        <Color x:Key="Gray9">#FFA59F93</Color>
        <Color x:Key="Gray10">#7FFFFFFF</Color>
        <Color x:Key="Gray11">#7FA9A9A9</Color>
        <Color x:Key="Gray12">#A5F7F7F7</Color>
        <Color x:Key="Gray13">#5EC9C9C9</Color>
        <Color x:Key="TextBoxText">#FF414141</Color>
        <Color x:Key="NormalForegroundColor">#FF000000</Color>
        <Color x:Key="HoverForegroundColor">#FFFFFFFF</Color>
        <!--Note: For the best design BaseColor2 should be a contrast of BaseColor1-->
    <RadialGradientBrush x:Key="BaseColor1" RadiusY="0.573" RadiusX="0.667" GradientOrigin="1.01,1.035">
        <GradientStop Color="Brown" Offset="0.81"/>
        <GradientStop Color="Orange"/>
    </RadialGradientBrush>
    <Color x:Key="BaseColor2">#FFFFFFFF</Color>
        <Color x:Key="BaseColor5">#FFBABABA</Color>
        <Color x:Key="BaseColor3">#FF303030</Color>

        <!--LIGHT COLOR TRANSPARENCIES-->
        <!--0%-->
        <Color x:Key="TransparentWhiteColor">#00FFFFFF</Color>
        <!--10%-->
        <Color x:Key="TransparentWhiteLightColor">#19FFFFFF</Color>
        <!--25%-->
        <Color x:Key="TransparentLightestColor">#34FFFFFF</Color>
        <!--65%-->
        <Color x:Key="TransparentLightLightColor">#A5FFFFFF</Color>
        <!--85%-->
        <Color x:Key="TransparentLightColor">#D8FFFFFF</Color>


        <!--DARK COLOR TRANSPARENCIES-->
        <!--0%-->
        <Color x:Key="TransparentBlackColor">#00000000</Color>
        <!--25%-->
        <Color x:Key="TransparentDarkColor">#3F000000</Color>
        <!--35%-->
        <Color x:Key="TransparentDarkDarkColor">#59000000</Color>
        <!--60%-->
        <Color x:Key="TransparentDarkDarkDarkColor">#99000000</Color>
        <!--80%-->
        <Color x:Key="TransparentDarkestColor">#CC000000</Color>

        <!-- CORE CONTROL COLORS-->
        <Color x:Key="ValidationColor1">#052A2E31</Color>
        <Color x:Key="ValidationColor2">#152A2E31</Color>
        <Color x:Key="ValidationColor3">#252A2E31</Color>
        <Color x:Key="ValidationColor4">#352A2E31</Color>
        <Color x:Key="ValidationColor5">#FFDC000C</Color>
        <Color x:Key="ValidationSummaryColor1">#FFDC020D</Color>
        <Color x:Key="ValidationSummaryColor2">#FFCA000C</Color>
        <Color x:Key="ValidationSummaryColor3">#FFFF9298</Color>
        <Color x:Key="ValidationSummaryColor4">#FFFDC8C8</Color>
        <Color x:Key="ValidationSummaryColor5">#DDD43940</Color>
        <Color x:Key="ValidationSummaryFillColor1">#59F7D8DB</Color>
        <Color x:Key="ValidationSummaryFillColor2">#FFF7D8DB</Color>
        <Color x:Key="ControlsValidationColor">#FFDB000C</Color>

        <Color x:Key="ProgressIndeterminateColor1">#33878787</Color>
        <Color x:Key="ProgressIndeterminateColor2">#33959595</Color>
        <Color x:Key="ProgressIndeterminateColor3">#4C000000</Color>
        <Color x:Key="ProgressIndeterminateColor4">#4C000000</Color>

        <!-- SDK COLORS -->
        <Color x:Key="PageOverlayColor">#7F000000</Color>

        <!-- TOOLKIT COLORS -->
        <Color x:Key="RatingStarsColor">#F6FF9900</Color>
        <Color x:Key="RatingMouseOverColor">#F6FDFF70</Color>
        <Color x:Key="TimeHintIconColor1">#F6CAA709</Color>
        <Color x:Key="TimeHintIconColor2">#F3F7F34F</Color>
        <Color x:Key="TimeHintIconColor3">#E7CAA709</Color>
        <Color x:Key="TimeHintIconColor4">#E7967C07</Color>
        <Color x:Key="TimeHintIconColor5">#E7625106</Color>
        <Color x:Key="TimeHintIconColor6">#FB8F8873</Color>
        <Color x:Key="TimeHintIconColor7">#F6271A47</Color>
        <Color x:Key="TimeHintIconColor8">#E7271A47</Color>
        <Color x:Key="TimeHintIconColor9">#9A89782B</Color>
        <Color x:Key="TimeHintIconColor10">#4DEBD60F</Color>
        <Color x:Key="TimeHintIconColor11">#FBF6EC20</Color>
        <Color x:Key="TimeHintIconColor12">#FF1B1B54</Color>
        <Color x:Key="TimeHintIconColor13">#FF1C1C50</Color>

        <Color x:Key="OKButtonIconColor1">#FF67CA0A</Color>
        <Color x:Key="OKButtonIconColor2">#FF498C38</Color>
        <Color x:Key="OKButtonIconColor3">#FF29EE5B</Color>
        <Color x:Key="CancelButtonIconColor1">#FFEA7525</Color>
        <Color x:Key="CancelButtonIconColor2">#FFDA715B</Color>
        <Color x:Key="CancelButtonIconColor3">#FFB72909</Color>

        <!--CHART COLORS-->
        <Color x:Key="ChartBrush1">#FF0097FC</Color>
        <Color x:Key="ChartBrush2">#FF70BBED</Color>
        <Color x:Key="ChartBrush3">#FF70BBED</Color>
        <Color x:Key="ChartBrush4">#FF4556BA</Color>
        <Color x:Key="ChartBrush5">#FFC84BA4</Color>
        <Color x:Key="ChartBrush6">#FF477ABE</Color>
        <Color x:Key="ChartBrush7">#FF6644B7</Color>
        <Color x:Key="ChartBrush8">#FFA045BA</Color>
        <Color x:Key="ChartBrush9">#FF73C348</Color>
        <Color x:Key="ChartBrush10">#FFDD5279</Color>
        <Color x:Key="ChartBrush11">#FF4999C4</Color>
        <Color x:Key="ChartBrush12">#FFEC8B58</Color>
        <Color x:Key="ChartBrush13">#FFECA058</Color>
        <Color x:Key="ChartBrush14">#FFEC6558</Color>
        <Color x:Key="ChartBrush15">#FFEC8B58</Color>
        <Color x:Key="ChartBrush16">#FFECA058</Color>

        <!-- Colors Stop -->

        <!-- *************BRUSHES START************* -->
        <!--PROJECT TEMPLATE BRUSHES -->

        <!-- UNIVERSAL CONTROL BRUSHES -->

    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
    
    
        <SolidColorBrush x:Key="ControlBackgroundBrush"
                     Color="{StaticResource WhiteColor}" />
        <SolidColorBrush x:Key="WhiteBrush"
                     Color="{StaticResource WhiteColor}" />
        <SolidColorBrush x:Key="BlackBrush"
                     Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="TextBrush"
                     Color="{StaticResource DarkSlateBlueColor}" />
        <SolidColorBrush x:Key="LabelTextBrush"
                     Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="WhiteColorBrush"
                     Color="{StaticResource WhiteColor}" />
        <SolidColorBrush x:Key="BlackColorBrush"
                     Color="{StaticResource BlackColor}" />

        <SolidColorBrush x:Key="HighlightBrush"
                     Color="{StaticResource HighlightDarkColor}" />
        <SolidColorBrush x:Key="HighlightLightBrush"
                     Color="{StaticResource HighlightLightColor}" />
        <SolidColorBrush x:Key="NavigationBorderBrush"
                     Color="#FF9D9492" />
        <SolidColorBrush x:Key="NavigationForegroundBrush"
                     Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="PageBorderBrush"
                     Color="#FFB2B2B2" />
        <SolidColorBrush x:Key="BodyTextColorBrush"
                     Color="#FF313131" />
        <SolidColorBrush x:Key="ControlsDisabledBrush"
                     Color="{StaticResource TransparentLightLightColor}" />
        <SolidColorBrush x:Key="ReadOnlyBrush"
                     Color="{StaticResource TransparentLightestColor}" />
        <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#FFAAAAAA" />
        <SolidColorBrush x:Key="DisabledControlBrush"
                     Color="#FFAAAAAA" />
        <SolidColorBrush x:Key="DisabledWhiteColorBrush"
                     Color="{StaticResource WhiteColor}" />
        <SolidColorBrush x:Key="RatingStarsBrush"
                     Color="{StaticResource RatingStarsColor}" />
        <SolidColorBrush x:Key="RatingMouseOverBrush"
                     Color="{StaticResource RatingMouseOverColor}" />
        <SolidColorBrush x:Key="PageOverlayBrush"
                     Color="{StaticResource PageOverlayColor}" />

        <SolidColorBrush x:Key="FuzzBrush1"
                     Color="#1E000000" />
        <SolidColorBrush x:Key="FuzzBrush2"
                     Color="#14000000" />
        <SolidColorBrush x:Key="FuzzBrush3"
                     Color="Black" />

        <SolidColorBrush x:Key="TransparentWhiteBrush"
                     Color="{StaticResource TransparentWhiteColor}" />
        <SolidColorBrush x:Key="TransparentWhiteLightBrush"
                     Color="{StaticResource TransparentWhiteColor}" />
        <SolidColorBrush x:Key="TransparentLightestBrush"
                     Color="{StaticResource TransparentLightestColor}" />
        <SolidColorBrush x:Key="TransparentLightLightBrush"
                     Color="{StaticResource TransparentLightLightColor}" />
        <SolidColorBrush x:Key="TransparentBlackBrush"
                     Color="{StaticResource TransparentBlackColor}" />
        <SolidColorBrush x:Key="TransparentDarkBrush"
                     Color="{StaticResource TransparentDarkColor}" />
        <SolidColorBrush x:Key="TransparentDarkDarkDarkBrush"
                     Color="{StaticResource TransparentDarkDarkDarkColor}" />

        <SolidColorBrush x:Key="GrayBrush1"
                     Color="{StaticResource Gray1}" />
        <SolidColorBrush x:Key="GrayBrush2"
                     Color="{StaticResource Gray2}" />
        <SolidColorBrush x:Key="GrayBrush3"
                     Color="{StaticResource Gray3}" />
        <SolidColorBrush x:Key="GrayBrush4"
                     Color="{StaticResource Gray4}" />
        <SolidColorBrush x:Key="GrayBrush5"
                     Color="{StaticResource Gray5}" />
        <SolidColorBrush x:Key="GrayBrush6"
                     Color="{StaticResource Gray6}" />
        <SolidColorBrush x:Key="GrayBrush7"
                     Color="{StaticResource Gray7}" />
        <SolidColorBrush x:Key="GrayBrush8"
                     Color="{StaticResource Gray8}" />
        <SolidColorBrush x:Key="GrayBrush9"
                     Color="{StaticResource Gray9}" />
        <SolidColorBrush x:Key="GrayBrush10"
                     Color="{StaticResource Gray10}" />
        <SolidColorBrush x:Key="GrayBrush11"
                     Color="{StaticResource Gray11}" />
        <SolidColorBrush x:Key="GrayBrush12"
                     Color="{StaticResource Gray12}" />
        <SolidColorBrush x:Key="GrayBrush13"
                     Color="{StaticResource Gray13}" />

        <SolidColorBrush x:Key="HoverHyperlinkForegroundBrush"
                     Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="HoverHyperlinkBackgroundBrush"
                     Color="{StaticResource WhiteColor}" />

        <SolidColorBrush x:Key="TextBoxBorderBrush"
                     Color="{StaticResource Gray1}" />
        <SolidColorBrush x:Key="ControlBorderBrush"
                     Color="{StaticResource Gray1}" />
        <SolidColorBrush x:Key="TextBoxMouseOverBorderBrush"
                     Color="{StaticResource HighlightDarkColor}" />
        <SolidColorBrush x:Key="TextBoxMouseOverInnerBorderBrush"
                     Color="{StaticResource HighlightLightColor}" />

        <SolidColorBrush x:Key="CheckBoxBrush"
                     Color="{StaticResource Gray2}" />
        <SolidColorBrush x:Key="CheckBoxMouseOverBrush"
                     Color="{StaticResource Gray3}" />
        <LinearGradientBrush x:Key="CheckBoxBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
            <GradientStop Color="#FFE5E5E5"
                      Offset="0" />
            <GradientStop Color="{StaticResource WhiteColor}"
                      Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ApplicationNameBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
            <GradientStop Color="#FF14BBD2"
                      Offset="0" />
            <GradientStop Color="#FF013C6C"
                      Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="ThumbBrush"
                     Color="{StaticResource Gray4}" />

        <SolidColorBrush x:Key="ItemSelectedBrush"
                     Color="{StaticResource Gray5}" />

        <SolidColorBrush x:Key="SliderTrackBrush"
                     Color="{StaticResource Gray6}" />

        <SolidColorBrush x:Key="NormalBrush"
                     Color="{StaticResource Gray7}" />

        <SolidColorBrush x:Key="ComboBoxPopupBrush"
                     Color="{StaticResource Gray9}" />
        <LinearGradientBrush x:Key="BrandingBrush"
                         EndPoint="0.001,0.5"
                         StartPoint="1.002,0.5">
            <GradientStop Color="{StaticResource HighlightDarkColor}"
                      Offset="0" />
            <GradientStop Color="#FF5FC316"
                      Offset="1" />
        </LinearGradientBrush>

        <DropShadowEffect x:Key="DropShadowBrush"
                      Direction="330"
                      Opacity="0.3"
                      ShadowDepth="0"
                      BlurRadius="6" />

        <!--<SolidColorBrush x:Key="WindowBackgroundBrush"
                     Color="{StaticResource MistyRoseColor}" />-->
        <SolidColorBrush x:Key="SeperatorBrush"
                     Color="#FFC4C4C5" />


        <!-- CONTROL VALIDATION BRUSHES -->
        <SolidColorBrush x:Key="ControlsValidationBrush"
                     Color="{StaticResource ControlsValidationColor}" />
        <SolidColorBrush x:Key="ValidationBrush1"
                     Color="{StaticResource ValidationColor1}" />
        <SolidColorBrush x:Key="ValidationBrush2"
                     Color="{StaticResource ValidationColor2}" />
        <SolidColorBrush x:Key="ValidationBrush3"
                     Color="{StaticResource ValidationColor3}" />
        <SolidColorBrush x:Key="ValidationBrush4"
                     Color="{StaticResource ValidationColor4}" />
        <SolidColorBrush x:Key="ValidationBrush5"
                     Color="{StaticResource ValidationColor5}" />
        <SolidColorBrush x:Key="ValidationSummaryBrush1"
                     Color="{StaticResource ValidationSummaryColor1}" />
        <SolidColorBrush x:Key="ValidationSummaryBrush2"
                     Color="{StaticResource ValidationSummaryColor2}" />
        <SolidColorBrush x:Key="ValidationSummaryBrush3"
                     Color="{StaticResource ValidationSummaryColor3}" />
        <SolidColorBrush x:Key="ValidationSummaryBrush4"
                     Color="{StaticResource ValidationSummaryColor4}" />
        <SolidColorBrush x:Key="ValidationSummaryBrush5"
                     Color="{StaticResource ValidationSummaryColor5}" />
        <SolidColorBrush x:Key="ValidationSummaryFillBrush1"
                     Color="{StaticResource ValidationSummaryFillColor1}" />
        <SolidColorBrush x:Key="ValidationSummaryFillBrush2"
                     Color="{StaticResource ValidationSummaryFillColor2}" />
        <SolidColorBrush x:Key="ValidationSummaryDisabledBrush"
                     Color="{StaticResource TransparentLightLightColor}" />

        <!--VALIDATION ICON BRUSHES-->
        <SolidColorBrush x:Key="TimeHintIconBrush1"
                     Color="{StaticResource TimeHintIconColor1}" />
        <SolidColorBrush x:Key="TimeHintIconBrush2"
                     Color="{StaticResource TimeHintIconColor2}" />
        <SolidColorBrush x:Key="TimeHintIconBrush3"
                     Color="{StaticResource TimeHintIconColor3}" />
        <SolidColorBrush x:Key="TimeHintIconBrush4"
                     Color="{StaticResource TimeHintIconColor4}" />
        <SolidColorBrush x:Key="TimeHintIconBrush5"
                     Color="{StaticResource TimeHintIconColor5}" />
        <SolidColorBrush x:Key="TimeHintIconBrush6"
                     Color="{StaticResource TimeHintIconColor6}" />
        <SolidColorBrush x:Key="TimeHintIconBrush7"
                     Color="{StaticResource TimeHintIconColor7}" />
        <SolidColorBrush x:Key="TimeHintIconBrush8"
                     Color="{StaticResource TimeHintIconColor8}" />
        <SolidColorBrush x:Key="TimeHintIconBrush9"
                     Color="{StaticResource TimeHintIconColor9}" />
        <SolidColorBrush x:Key="TimeHintIconBrush10"
                     Color="{StaticResource TimeHintIconColor10}" />
        <SolidColorBrush x:Key="TimeHintIconBrush11"
                     Color="{StaticResource TimeHintIconColor11}" />
        <SolidColorBrush x:Key="TimeHintIconBrush12"
                     Color="{StaticResource TimeHintIconColor12}" />
        <SolidColorBrush x:Key="TimeHintIconBrush13"
                     Color="{StaticResource TimeHintIconColor13}" />

        <!-- ACCENT COLOR BRUSHES -->
        <Color x:Key="AccentColorBlue">#1BA1E2</Color>
        <Color x:Key="AccentColorLightBlue">#FFB2E0F4</Color>
        <SolidColorBrush x:Key="AccentColorLightBlueBrush"
                     Color="{StaticResource AccentColorLightBlue}"
                     PresentationOptions:Freeze="True" />
        <SolidColorBrush x:Key="AccentColorBlueBrush"
                     Color="{StaticResource AccentColorBlue}"
                     PresentationOptions:Freeze="True" />

    <FontFamily x:Key="HeaderFontFamily">Calibri, Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>
    <FontFamily x:Key="ContentFontFamily">Calibri, Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>

    <sys:Double x:Key="ApplicationNameFontSize">50</sys:Double>
    <sys:Double x:Key="HeaderFontSize">21</sys:Double>
    <sys:Double x:Key="NavigationFontSize">26</sys:Double>

    <sys:Double x:Key="ContentFontSize">13</sys:Double>
    <sys:Double x:Key="MainDataGridFontSize">15</sys:Double>
    <sys:Double x:Key="RegularDataGridFontSize">13</sys:Double>
    <sys:Double x:Key="SmallDataGridFontSize">9</sys:Double>
    <sys:Double x:Key="HyperlinkFontSize">13</sys:Double>
    <sys:Double x:Key="LabelFontSize">13</sys:Double>
    <sys:Double x:Key="ControlTitleFontSize">13</sys:Double>
    <sys:Double x:Key="ControlTitleBigFontSize">15</sys:Double>
    <sys:Double x:Key="ControlContentFontSize">13</sys:Double>

    <Color x:Key="PrimaryColor">White</Color>
    <Color x:Key="SecondaryColor">White</Color>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}" />
    <SolidColorBrush x:Key="SecondaryBrush" Color="{DynamicResource SecondaryColor}" />
    <Color x:Key="DisabledColor">#8CFFFFFF</Color>
    <Color x:Key="ItemOver1">#FFF4FAFD</Color>
    <Color x:Key="ItemOver2">#FFCFEDFD</Color>
    <SolidColorBrush x:Key="OutsideFontColor" Color="#FF000000"/>
    <Color x:Key="Over1">#FFE2F5FF</Color>
    <Color x:Key="Over2">#FFC0E7FC</Color>
    <Color x:Key="Over3">#FF9EDDFF</Color>
    <Color x:Key="Press1">#FF759FB6</Color>
    <Color x:Key="Press2">#FFB6E0F6</Color>
    <Color x:Key="Press3">#FF9DD5F4</Color>
    <Color x:Key="PressHighlight">#FF387599</Color>
    <Color x:Key="ItemOverStroke">#FFD8F0FA</Color>
    <Color x:Key="ItemSelectStroke">Orange</Color>
    <SolidColorBrush x:Key="hoverStroke" Color="{StaticResource ItemOverStroke}"/>
    <SolidColorBrush x:Key="selectedStroke" Color="{StaticResource ItemSelectStroke}"/>
    <Color x:Key="ButtonHighlightMid">#0095D9FF</Color>
    <Color x:Key="ButtonHighlightMid2">#9935A6E6</Color>
    <!--60%-->
    <Color x:Key="ButtonHighlightMid3">#A535A6E6</Color>


    <LinearGradientBrush x:Key="WinHdrFtrFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="CornflowerBlue" Offset="0" />
        <GradientStop Color="CornflowerBlue" Offset="0.15" />
        <GradientStop Color="CornflowerBlue" Offset="0.85" />
        <GradientStop Color="CornflowerBlue" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ExpanderFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="DeepSkyBlue" Offset="0" />
        <GradientStop Color="DeepSkyBlue" Offset="0.25" />
        <GradientStop Color="DeepSkyBlue" Offset="0.75" />
        <GradientStop Color="DeepSkyBlue" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BtnOverFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Orange" Offset="0.5"/>
        <GradientStop Color="Orange" Offset="0.509"/>
        <GradientStop Color="Orange" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BtnPressFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Press1}" Offset="0"/>
        <GradientStop Color="{StaticResource Press2}" Offset="0.152"/>
        <GradientStop Color="{StaticResource Over2}" Offset="0.5"/>
        <GradientStop Color="{StaticResource Press3}" Offset="0.509"/>
    </LinearGradientBrush>

    <!-- standard button specific resources -->
    <LinearGradientBrush x:Key="btnOverFillHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource ButtonHighlightMid2}" Offset="0"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.101"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.899"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid2}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnPressFillHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource PressHighlight}" Offset="0"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.037"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.143"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.857"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.963"/>
        <GradientStop Color="{StaticResource PressHighlight}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="hoverGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource ItemOver1}" Offset="0.5"/>
        <GradientStop Color="{StaticResource Over1}" Offset="0.5"/>
        <GradientStop Color="{StaticResource ItemOver2}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxNorm" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFABAEB3" Offset="0"/>
        <GradientStop Color="#FFABAEB3" Offset="0.355"/>
    </LinearGradientBrush>

    <!--Control Label Style-->

    <Style x:Key="ControlLabelStyle"
           TargetType="TextBlock">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource LabelTextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource LabelFontSize}" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

        <!--ValidationToolTipTemplate Style-->
        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform"
                                    X="-25" />
                </Grid.RenderTransform>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="OpenStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="0" />
                            <vsm:VisualTransition GeneratedDuration="0:0:0.2"
                                              To="Open">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                               Storyboard.TargetName="xform">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2"
                                                          Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                               Storyboard.TargetName="Root">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2"
                                                          Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </vsm:VisualTransition>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                           Storyboard.TargetName="xform">
                                    <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Border Background="{StaticResource ValidationBrush1}"
                    CornerRadius="5"
                    Margin="4,4,-4,-4" />
                <Border Background="{StaticResource ValidationBrush2}"
                    CornerRadius="4"
                    Margin="3,3,-3,-3" />
                <Border Background="{StaticResource ValidationBrush3}"
                    CornerRadius="3"
                    Margin="2,2,-2,-2" />
                <Border Background="{StaticResource ValidationBrush4}"
                    CornerRadius="2"
                    Margin="1,1,-1,-1" />
                <Border Background="{StaticResource ValidationBrush5}"
                    CornerRadius="2" />
                <Border CornerRadius="2">
                    <TextBlock Foreground="{StaticResource WhiteColorBrush}"
                           FontWeight="SemiBold"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
                </Border>
            </Grid>
        </ControlTemplate>

        <!--CommonValidationToolTipTemplate Style-->
        <ControlTemplate x:Key="CommonValidationToolTipTemplate"
                     TargetType="ToolTip">
            <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="OpenStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="0" />
                            <vsm:VisualTransition GeneratedDuration="0:0:0.2"
                                              To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetName="Translation"
                                                 Storyboard.TargetProperty="X"
                                                 To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3"
                                                  EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetName="Root"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" />
                                </Storyboard>
                            </vsm:VisualTransition>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Translation"
                                             Storyboard.TargetProperty="X"
                                             To="0" />
                                <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                            </Storyboard>
                        </vsm:VisualState>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="Translation"
                                    X="-25" />
                </Grid.RenderTransform>
                <Border Margin="4,4,-4,-4"
                    Background="{StaticResource ValidationBrush1}"
                    CornerRadius="5" />
                <Border Margin="3,3,-3,-3"
                    Background="{StaticResource ValidationBrush2}"
                    CornerRadius="4" />
                <Border Margin="2,2,-2,-2"
                    Background="{StaticResource ValidationBrush3}"
                    CornerRadius="3" />
                <Border Margin="1,1,-1,-1"
                    Background="{StaticResource ValidationBrush4}"
                    CornerRadius="2" />
                <Border Background="{StaticResource ValidationBrush5}"
                    CornerRadius="2">
                    <TextBlock Margin="8,4,8,4"
                           MaxWidth="250"
                           UseLayoutRounding="false"
                           Foreground="{StaticResource WhiteColorBrush}"
                           Text="{Binding (Validation.Errors)[0].Exception.Message}"
                           TextWrapping="Wrap" />
                </Border>
            </Grid>
        </ControlTemplate>

        <!--SearchButtonStyle-->
        <Style x:Key="SearchButtonStyle"
           TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Margin"
                Value="-22,0,20,0" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Width="14"
                          Height="16"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Margin="-3,-3,0,0">
                            <Rectangle Fill="#FF767676"
                                   HorizontalAlignment="Right"
                                   Height="8"
                                   Margin="0,0,-0.164,-0.334"
                                   RadiusY="0.5"
                                   RadiusX="0.5"
                                   RenderTransformOrigin="0.5,0.5"
                                   Stroke="#FF767676"
                                   UseLayoutRounding="False"
                                   VerticalAlignment="Bottom"
                                   Width="4">
                                <Rectangle.RenderTransform>
                                    <RotateTransform Angle="-45" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Ellipse Fill="Transparent"
                                 Margin="0,0,1,3"
                                 Stroke="#FF767676" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="BorderSelected"
                            Margin="-6,0,0,0"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource TextBoxBorderBrush}"
                            CornerRadius="2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource HighlightLightColor}"
                                                        Storyboard.TargetProperty="(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="ContentPresenterWrapperColor"
                                                        d:IsOptimized="True" />
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray5}"
                                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="grid"
                                                        d:IsOptimized="True" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray5}"
                                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="grid"
                                                        d:IsOptimized="True" />
                                            <DoubleAnimation Duration="0"
                                                         To="0.8"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="grid"
                                                         d:IsOptimized="True" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="DisabledOverlay">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="grid"
                              Cursor="{TemplateBinding Cursor}">
                                <Grid.Background>
                                    <SolidColorBrush Color="{StaticResource BaseColor2}" />
                                </Grid.Background>
                                <TextBlock x:Name="UnderlineTextBlock"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       Text="{TemplateBinding Content}"
                                       TextDecorations="Underline"
                                       Visibility="Collapsed"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                				<TextBlock.Foreground>
                					<SolidColorBrush Color="{StaticResource HighlightDarkColor}" />
                				</TextBlock.Foreground>
                                </TextBlock>
                                <TextBlock x:Name="DisabledOverlay"
                                       Foreground="{StaticResource DisabledForegroundBrush}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       Text="{TemplateBinding Content}"
                                       Visibility="Collapsed"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Panel.ZIndex="1" />
                                <ContentControl>
                                    <ContentControl.Foreground>
                                        <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                     Color="{StaticResource HighlightDarkColor}" />
                                    </ContentControl.Foreground>
                                    <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  Width="21"
                                                  Margin="2,3,0,0" />
                                </ContentControl>
                                <Rectangle x:Name="FocusVisualElement"
                                       IsHitTestVisible="false"
                                       Opacity="0"
                                       StrokeThickness="1">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource HighlightLightColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button Style-->
        <Style TargetType="Button"
           x:Key="DefaultButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="FontWeight"
                Value="Normal" />
            <Setter Property="Padding"
                Value="5,6" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Width"
                Value="125" />
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3" />
                            <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   RadiusY="3"
                                   RadiusX="3" />
                            <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   RadiusY="4"
                                   RadiusX="4"
                                   Margin="-1"
                                   Opacity="0" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--HyperlinkButton Style-->
        <Style TargetType="Button"
           x:Key="DefaultHyperlinkButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource HighlightBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource HyperlinkFontSize}" />
            <Setter Property="Padding"
                Value="2,0,2,0" />
            <Setter Property="Cursor"
                Value="Hand" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}"
                          Cursor="{TemplateBinding Cursor}">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="UnderlineTextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource AccentColorLightBlue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="UnderlineTextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="DisabledOverlay">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>

                            <TextBlock x:Name="UnderlineTextBlock"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Content}"
                                   TextDecorations="Underline"
                                   Visibility="Collapsed"
                                   FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{StaticResource AccentColorBlue}"
                                                 PresentationOptions:Freeze="True" />
                            </TextBlock.Foreground>
                            </TextBlock>
                            <TextBlock x:Name="DisabledOverlay"
                                   Foreground="{StaticResource DisabledForegroundBrush}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Content}"
                                   Visibility="Collapsed"
                                   FontSize="{TemplateBinding FontSize}" />

                            <ContentControl FontSize="{TemplateBinding FontSize}"
                                        IsTabStop="{TemplateBinding IsTabStop}">
                                <ContentControl.Foreground>
                                    <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource AccentColorBlue}"
                                                 PresentationOptions:Freeze="True" />
                                </ContentControl.Foreground>
                                <TextBlock x:Name="contentPresenter"
                                       Text="{TemplateBinding Content}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}" />
                            </ContentControl>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBox Style-->
        <Style TargetType="TextBox"
           x:Key="DefaultTextBoxStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
            <Setter Property="MinHeight"
                Value="26" />
            <Setter Property="Width" Value="175"/>
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Padding"
                Value="2" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="RootElement">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                            <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                            <Grid Margin="0,1,0,0">
                                <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource ReadOnlyBrush}"
                                    Opacity="0" />
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Margin="4,0,4,2"
                                              VerticalAlignment="Center"
                                              Background="{x:Null}" />
                                </Grid>
                            </Grid>
                            <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{StaticResource ControlsDisabledBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                            <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox Style-->
        <Style x:Key="ComboBoxFocusVisualStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Rectangle x:Name="FocusRectangle"
                                   RadiusY="3"
                                   RadiusX="3"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   Margin="1"
                                   RadiusY="3"
                                   RadiusX="3"
                                   Stroke="{StaticResource HighlightLightBrush}"
                                   StrokeThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="True" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Focusable"
                Value="True" />
            <Setter Property="ClickMode"
                Value="Press" />
            <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Chrome"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3"
                                SnapsToDevicePixels="true">
                                <Grid HorizontalAlignment="Right"
                                  Margin="2,0"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                    <Path x:Name="Arrow"
                                      Data="M 0 0 L 3.5 4 L 7 0 Z"
                                      Fill="Black"
                                      HorizontalAlignment="Center"
                                      Margin="3,1,0,0"
                                      VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <Rectangle x:Name="FocusRectangle"
                                   RadiusY="3"
                                   RadiusX="3"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   Margin="1"
                                   RadiusY="3"
                                   RadiusX="3"
                                   Stroke="{StaticResource HighlightLightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                 Value="true">
                                <Setter Property="Visibility"
                                    TargetName="FocusRectangle"
                                    Value="Visible" />
                                <Setter Property="Visibility"
                                    TargetName="FocusInnerRectangle"
                                    Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                 Value="True">
                                <Setter Property="Background"
                                    TargetName="Chrome"
                                    Value="{StaticResource GrayBrush8}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter Property="Fill"
                                    TargetName="Arrow"
                                    Value="{StaticResource GrayBrush11}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="OverridesDefaultStyle"
                Value="True" />
            <Setter Property="AllowDrop"
                Value="true" />
            <Setter Property="MinWidth"
                Value="0" />
            <Setter Property="MinHeight"
                Value="26" />
            <Setter Property="BorderThickness"
                Value="0" />
            <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="True" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Focusable"
                Value="True" />
            <Setter Property="ClickMode"
                Value="Press" />
            <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            Margin="1"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="Arrow"
                              Data="M 0 0 L 3.5 4 L 7 0 Z"
                              Fill="Black"
                              HorizontalAlignment="Center"
                              Margin="0,1,0,0"
                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                 Value="True">
                                <Setter Property="Background"
                                    TargetName="Chrome"
                                    Value="{StaticResource GrayBrush8}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Fill"
                                    TargetName="Arrow"
                                    Value="{StaticResource GrayBrush11}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
            <Grid x:Name="Placement"
              SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                    <themes:SystemDropShadowChrome x:Name="Shdw"
                                               Color="Transparent"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               MinWidth="{Binding ActualWidth, ElementName=Placement}">
                        <Border x:Name="DropDownBorder"
                            BorderBrush="{StaticResource ComboBoxPopupBrush}"
                            BorderThickness="1"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer"
                                      BorderThickness="0"
                                      Padding="1"
                                      VerticalScrollBarVisibility="Auto">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left"
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                        <Rectangle x:Name="OpaqueRect"
                                               Fill="{Binding Background, ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </themes:SystemDropShadowChrome>
                </Popup>
                <Grid x:Name="Border"
                  Grid.ColumnSpan="2">
                    <Rectangle x:Name="Base"
                           Stroke="{TemplateBinding BorderBrush}"
                           StrokeThickness="{TemplateBinding BorderThickness}"
                           Fill="{StaticResource ControlBackgroundBrush}" />
                    <Rectangle x:Name="FocusRectangle"
                           StrokeThickness="{TemplateBinding BorderThickness}"
                           Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                           Visibility="Collapsed" />
                    <Rectangle x:Name="FocusInnerRectangle"
                           StrokeThickness="{TemplateBinding BorderThickness}"
                           Margin="1"
                           Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                           Visibility="Collapsed" />
                </Grid>
                <TextBox x:Name="PART_EditableTextBox"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Margin="{TemplateBinding Padding}"
                     Style="{StaticResource ComboBoxEditableTextBox}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                <ToggleButton Grid.Column="1"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin"
                     Value="true">
                    <Setter Property="Foreground"
                        Value="Black" />
                    <Setter Property="Visibility"
                        TargetName="FocusRectangle"
                        Value="Visible" />
                    <Setter Property="Visibility"
                        TargetName="FocusInnerRectangle"
                        Value="Visible" />
                </Trigger>
                <Trigger Property="IsDropDownOpen"
                     Value="true">
                    <Setter Property="Visibility"
                        TargetName="FocusRectangle"
                        Value="Visible" />
                    <Setter Property="Visibility"
                        TargetName="FocusInnerRectangle"
                        Value="Visible" />
                </Trigger>
                <Trigger Property="IsFocused"
                     Value="true">
                    <Setter Property="Visibility"
                        TargetName="FocusRectangle"
                        Value="Visible" />
                    <Setter Property="Visibility"
                        TargetName="FocusInnerRectangle"
                        Value="Visible" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                     Value="true">
                    <Setter Property="Visibility"
                        TargetName="FocusRectangle"
                        Value="Visible" />
                </Trigger>
                <Trigger Property="HasItems"
                     Value="false">
                    <Setter Property="Height"
                        TargetName="DropDownBorder"
                        Value="95" />
                </Trigger>
                <Trigger Property="IsEnabled"
                     Value="false">
                    <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    <Setter Property="Background"
                        Value="#FFF4F4F4" />
                </Trigger>
                <Trigger Property="IsGrouping"
                     Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
                </Trigger>
                <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                    <Setter Property="Margin"
                        TargetName="Shdw"
                        Value="0,0,5,5" />
                    <Setter Property="Color"
                        TargetName="Shdw"
                        Value="#71000000" />
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                    <Setter Property="Canvas.Top"
                        TargetName="OpaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter Property="Canvas.Left"
                        TargetName="OpaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="ComboBox"
           x:Key="DefaultComboBoxStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="True" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Gray7}"
                                 PresentationOptions:Freeze="True" />
                </Setter.Value>
            </Setter>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="175"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Padding"
                Value="3.5" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Key="comboToggleStyle"
                                   TargetType="ToggleButton">
                                    <Setter Property="Foreground"
                                        Value="{StaticResource TextBrush}" />
                                    <Setter Property="Background"
                                        Value="{StaticResource GrayBrush7}" />
                                    <Setter Property="BorderBrush"
                                        Value="{StaticResource TextBoxBorderBrush}" />
                                    <Setter Property="BorderThickness"
                                        Value="1" />
                                    <Setter Property="Padding"
                                        Value="3" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <vsm:VisualStateManager.VisualStateGroups>
                                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                                            <vsm:VisualState x:Name="Normal" />
                                                            <vsm:VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="MouseOverBorder">
                                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </vsm:VisualState>
                                                            <vsm:VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="PressedBorder">
                                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </vsm:VisualState>
                                                            <vsm:VisualState x:Name="Disabled" />
                                                        </vsm:VisualStateGroup>
                                                        <vsm:VisualStateGroup x:Name="CheckStates">
                                                            <vsm:VisualState x:Name="Checked">
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="CheckedRectangle">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                                          Value="1" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="CheckedInnerRectangle">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                                          Value="1" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </vsm:VisualState>
                                                            <vsm:VisualState x:Name="Unchecked" />
                                                        </vsm:VisualStateGroup>
                                                        <vsm:VisualStateGroup x:Name="FocusStates">
                                                            <vsm:VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="FocusRectangle">
                                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="FocusInnerRectangle">
                                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </vsm:VisualState>
                                                            <vsm:VisualState x:Name="Unfocused" />
                                                        </vsm:VisualStateGroup>
                                                    </vsm:VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="Background"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        CornerRadius="3" />
                                                    <Rectangle x:Name="DisabledVisualElement"
                                                           Fill="{StaticResource WhiteBrush}"
                                                           IsHitTestVisible="false"
                                                           Opacity="0"
                                                           RadiusY="3"
                                                           RadiusX="3" />
                                                    <Border x:Name="MouseOverBorder"
                                                        Background="{StaticResource GrayBrush8}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="3.5"
                                                        Opacity="0" />
                                                    <Border x:Name="PressedBorder"
                                                        Background="{StaticResource GrayBrush5}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="3.5"
                                                        Opacity="0" />
                                                    <Rectangle x:Name="FocusRectangle"
                                                           Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                                           RadiusY="4"
                                                           RadiusX="4"
                                                           Margin="-1"
                                                           Opacity="0" />
                                                    <Rectangle x:Name="FocusInnerRectangle"
                                                           StrokeThickness="{TemplateBinding BorderThickness}"
                                                           Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                                           RadiusX="3"
                                                           RadiusY="3"
                                                           Opacity="0" />
                                                    <Rectangle x:Name="CheckedRectangle"
                                                           StrokeThickness="{TemplateBinding BorderThickness}"
                                                           RadiusY="4"
                                                           RadiusX="4"
                                                           Opacity="0"
                                                           Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                                    <Rectangle x:Name="CheckedInnerRectangle"
                                                           StrokeThickness="{TemplateBinding BorderThickness}"
                                                           RadiusY="4"
                                                           RadiusX="4"
                                                           Opacity="0"
                                                           Margin="1"
                                                           Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                                    <ContentPresenter x:Name="contentPresenter"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Content="{TemplateBinding Content}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  RenderOptions.ClearTypeHint="Enabled" />
                                                    <Rectangle x:Name="FocusVisualElement"
                                                           IsHitTestVisible="false"
                                                           Margin="1"
                                                           RadiusY="3.5"
                                                           RadiusX="3.5"
                                                           Stroke="{StaticResource HighlightBrush}"
                                                           StrokeThickness="1"
                                                           Visibility="Collapsed" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver" />
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.45" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                    <vsm:VisualState x:Name="FocusedDropDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="PopupBorder">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border x:Name="ContentPresenterBorder">
                                <Grid>
                                    <ToggleButton x:Name="DropDownToggle"
                                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Focusable="false"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Background="{TemplateBinding Background}"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Right"
                                              Margin="0"
                                              Style="{StaticResource comboToggleStyle}"
                                              VerticalAlignment="Stretch">
                                        <Path x:Name="BtnArrow"
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                          HorizontalAlignment="Right"
                                          Height="4"
                                          Margin="0,0,6,0"
                                          Stretch="Uniform"
                                          Width="8">
                                            <Path.Fill>
                                                <SolidColorBrush x:Name="BtnArrowColor"
                                                             Color="{StaticResource Gray3}"
                                                             PresentationOptions:Freeze="True" />
                                            </Path.Fill>
                                        </Path>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="ContentPresenter"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                                </Grid>
                            </Border>
                            <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   RadiusY="4"
                                   RadiusX="4"
                                   Margin="-1"
                                   Opacity="0" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Opacity="0" />
                            <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Opacity="0" />
                            <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                CornerRadius="3"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                                </Grid>
                            </Border>
                            <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                                <Border x:Name="PopupBorder"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    BorderBrush="{StaticResource ComboBoxPopupBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{StaticResource WhiteBrush}"
                                    Effect="{StaticResource DropShadowBrush}">
                                    <ScrollViewer x:Name="ScrollViewer"
                                              BorderThickness="0"
                                              Padding="1"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto"
                                              CanContentScroll="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping"
                                 Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable"
                     Value="true">
                    <Setter Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <Setter Property="IsTabStop"
                        Value="false" />
                    <Setter Property="Padding"
                        Value="3,2,3,3" />
                    <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ComboBoxItem Style-->
        <Style TargetType="ComboBoxItem"
           x:Key="DefaultComboBoxItemStyle"
           d:IsControlPart="True">
            <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Padding"
                Value="3" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
            <Setter Property="Background"
                Value="{StaticResource TransparentWhiteBrush}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="KeyboardNavigation.DirectionalNavigation"
                Value="Once" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Grid Background="{TemplateBinding Background}"
                          Margin="0,0.5"
                          VerticalAlignment="Stretch">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value=".65" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HoverForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HoverForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HoverForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource HighlightBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource HighlightBrush}" />
                            <ContentControl IsTabStop="False">
                                <ContentControl.Foreground>
                                    <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource NormalForegroundColor}"
                                                 PresentationOptions:Freeze="True" />
                                </ContentControl.Foreground>
                                <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RenderOptions.ClearTypeHint="Enabled" />
                            </ContentControl>
                            <Rectangle x:Name="FocusVisualElement"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBlock Style-->
        <Style TargetType="TextBlock"
           x:Key="DefaultTextBlockStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
            <Setter Property="TextOptions.TextRenderingMode"
                Value="ClearType" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
        <!--<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>-->
        </Style>

        <!--ScrollBar Styles & Templates-->
        <ControlTemplate x:Key="HorizontalScrollBarTemplate"
                     TargetType="ScrollBar">
            <Grid x:Name="Root">
                <Grid.Resources>
                    <ControlTemplate x:Key="RepeatButtonTemplate"
                                 TargetType="RepeatButton">
                        <Grid x:Name="Root"
                          Background="Transparent">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="HorizontalIncrementTemplate"
                                 TargetType="RepeatButton">
                        <Grid x:Name="Root">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray2}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="HoverPath"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,1,0,0">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Blur"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,1,0,0">
                                <Path.Effect>
                                    <BlurEffect />
                                </Path.Effect>
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Rectangle x:Name="DisabledElement"
                                   Fill="{StaticResource WhiteColorBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="HorizontalDecrementTemplate"
                                 TargetType="RepeatButton">
                        <Grid x:Name="Root">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray2}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="HoverPath"
                              Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="0,1,0,0">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Blur"
                              Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="0,1,0,0">
                                <Path.Effect>
                                    <BlurEffect />
                                </Path.Effect>
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="HorizontalThumbTemplate"
                                 TargetType="Thumb">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ThumbVisual">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                  Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ThumbVisual"
                              Margin="0,1,0,1">
                                <Rectangle x:Name="Background"
                                       StrokeThickness="1"
                                       Fill="{StaticResource ThumbBrush}" />
                                <Rectangle x:Name="MouseOverRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                                <Rectangle x:Name="PressedRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Grid.Resources>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                        <vsm:VisualState x:Name="Normal" />
                        <vsm:VisualState x:Name="MouseOver" />
                        <vsm:VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0.5" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Grid x:Name="HorizontalRoot"
                  Height="11">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border BorderThickness="0,0,0,1"
                        Grid.RowSpan="1"
                        Margin="0,0,0,-1"
                        Grid.ColumnSpan="3"
                        Visibility="Collapsed">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource Gray4}"
                                         PresentationOptions:Freeze="True" />
                        </Border.BorderBrush>
                    </Border>

                    <RepeatButton x:Name="HorizontalSmallDecrease"
                              Grid.Column="0"
                              Interval="50"
                              IsTabStop="False"
                              Width="16"
                              Margin="1"
                              Template="{StaticResource HorizontalDecrementTemplate}"
                              Command="ScrollBar.LineLeftCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />

                    <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Orientation="Horizontal">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton x:Name="HorizontalLargeDecrease"
                                      IsTabStop="False"
                                      Interval="50"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageLeftCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="HorizontalThumb"
                               Background="{TemplateBinding Background}"
                               Grid.Column="2"
                               MinWidth="18"
                               Template="{StaticResource HorizontalThumbTemplate}"
                               Width="18"
                               HorizontalAlignment="Stretch" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton x:Name="HorizontalLargeIncrease"
                                      IsTabStop="False"
                                      Interval="50"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageRightCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>

                    <RepeatButton x:Name="HorizontalSmallIncrease"
                              Grid.Column="2"
                              IsTabStop="False"
                              Interval="50"
                              Width="16"
                              Margin="1"
                              Template="{StaticResource HorizontalIncrementTemplate}"
                              Command="ScrollBar.LineRightCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />
                </Grid>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="VerticalScrollBarTemplate"
                     TargetType="ScrollBar">
            <Grid x:Name="Root">
                <Grid.Resources>
                    <ControlTemplate x:Key="RepeatButtonTemplate"
                                 TargetType="RepeatButton">
                        <Grid x:Name="Root"
                          Background="Transparent">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="VerticalIncrementTemplate"
                                 TargetType="RepeatButton">
                        <Grid x:Name="Root">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="ButtonColor"
                                                 Color="{StaticResource Gray3}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="HoverPath"
                              Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Blur"
                              Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                                <Path.Effect>
                                    <BlurEffect />
                                </Path.Effect>
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Rectangle x:Name="DisabledElement"
                                   Fill="{StaticResource WhiteColorBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="VerticalDecrementTemplate"
                                 TargetType="RepeatButton">
                        <Grid x:Name="Root">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="Background"
                                   Fill="{StaticResource ControlBackgroundBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2"
                                   StrokeThickness="1" />
                            <Rectangle x:Name="BackgroundMouseOver"
                                   Fill="{StaticResource HighlightBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                            <Rectangle x:Name="BackgroundPressed"
                                   Fill="{StaticResource HighlightBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                            <Rectangle x:Name="BackgroundGradient"
                                   Fill="{StaticResource TransparentWhiteBrush}"
                                   Margin="1"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource ControlBackgroundBrush}"
                                   StrokeThickness="1" />
                            <Rectangle x:Name="Highlight"
                                   IsHitTestVisible="false"
                                   Margin="1"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1" />
                            <Path Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray2}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="HoverPath"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Blur"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                                <Path.Effect>
                                    <BlurEffect />
                                </Path.Effect>
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="VerticalThumbTemplate"
                                 TargetType="Thumb">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ThumbVisual">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                  Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ThumbVisual"
                              Margin="1,0,1,0">
                                <Rectangle x:Name="Background"
                                       StrokeThickness="1"
                                       Fill="{StaticResource ThumbBrush}" />
                                <Rectangle x:Name="MouseOverRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                                <Rectangle x:Name="PressedRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Grid.Resources>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                        <vsm:VisualState x:Name="Normal" />
                        <vsm:VisualState x:Name="MouseOver" />
                        <vsm:VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0.5" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Grid x:Name="VerticalRoot"
                  Width="11">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border BorderThickness="0,0,1,0"
                        Margin="0,0,-1,0"
                        Grid.RowSpan="3"
                        Visibility="Collapsed">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource Gray4}"
                                         PresentationOptions:Freeze="True" />
                        </Border.BorderBrush>
                    </Border>

                    <RepeatButton x:Name="VerticalSmallDecrease"
                              Grid.Row="0"
                              IsTabStop="False"
                              Interval="50"
                              Height="16"
                              Margin="1"
                              Template="{StaticResource VerticalDecrementTemplate}"
                              Command="ScrollBar.LineUpCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />

                    <Track x:Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="True"
                       Orientation="Vertical">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton x:Name="VerticalLargeDecrease"
                                      Interval="50"
                                      IsTabStop="False"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="VerticalThumb"
                               Height="Auto"
                               MinHeight="18"
                               Template="{StaticResource VerticalThumbTemplate}"
                               VerticalAlignment="Stretch" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton x:Name="VerticalLargeIncrease"
                                      IsTabStop="False"
                                      Interval="50"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>

                    <RepeatButton x:Name="VerticalSmallIncrease"
                              Grid.Row="2"
                              IsTabStop="False"
                              Interval="50"
                              Height="16"
                              Margin="1"
                              Template="{StaticResource VerticalIncrementTemplate}"
                              Command="ScrollBar.LineDownCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />
                </Grid>
            </Grid>
        </ControlTemplate>

        <Style x:Key="DefaultScrollBarStyle"
           TargetType="ScrollBar">
            <Setter Property="OverridesDefaultStyle"
                Value="True" />
            <Setter Property="SnapsToDevicePixels"
                Value="True" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="MinWidth"
                Value="20" />
            <Setter Property="MinHeight"
                Value="20" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                     Value="Horizontal">
                    <Setter Property="Width"
                        Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBarTemplate}" />
                </Trigger>
                <Trigger Property="Orientation"
                     Value="Vertical">
                    <Setter Property="Height"
                        Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBarTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ScrollViewer Style-->
        <Style x:Key="DefaultScrollViewerStyle"
           TargetType="ScrollViewer">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
            <Setter Property="VerticalScrollBarVisibility"
                Value="Visible" />
            <Setter Property="Padding"
                Value="4" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Gray4}"
                                 PresentationOptions:Freeze="True" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    Cursor="{TemplateBinding Cursor}"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                <Rectangle Grid.Column="1"
                                       Grid.Row="1"
                                       Visibility="Collapsed" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       IsTabStop="False"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Margin="0,-1,-3,-1"
                                       Minimum="0"
                                       Orientation="Vertical"
                                       Grid.Row="0"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Width="18" />
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Column="0"
                                       Height="18"
                                       IsTabStop="False"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Margin="-1,0,-1,-3"
                                       Minimum="0"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListBox Style -->
        <Style TargetType="ListBox"
           x:Key="DefaultListBoxStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Padding"
                Value="1" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
            <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="ScrollViewer"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          Background="{TemplateBinding Background}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                            <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="10">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="-1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="-1,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"
                Value="0" />
        </Style>

        <!--ListBoxItem Style-->
        <Style TargetType="ListBoxItem"
           x:Key="DefaultListBoxItemStyle"
           d:IsControlPart="True">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="Padding"
                Value="10" />
            <Setter Property="Margin"
                Value="0" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="{TemplateBinding Background}">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="fillColor" />
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource HoverForegroundColor}"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentControl" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource HoverForegroundColor}"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentControl" />
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="fillColor" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SelectedUnfocused" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisualElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="fillColor2" />
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource HoverForegroundColor}"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentControl" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="fillColor"
                                   Fill="{StaticResource HighlightBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1" />
                            <Rectangle x:Name="fillColor2"
                                   Fill="{StaticResource HighlightBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1" />
                            <ContentControl x:Name="contentControl"
                                        Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="7"
                                              RenderOptions.ClearTypeHint="Enabled" />
                            </ContentControl>
                            <Rectangle x:Name="FocusVisualElement"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CheckBox Style-->
        <Style TargetType="CheckBox"
           x:Key="DefaultCheckBoxStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="Background"
                Value="{StaticResource CheckBoxBackgroundBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="Padding"
                Value="5,0,0,0" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource Gray2}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.55" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CheckStates">
                                    <vsm:VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckIcon">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unchecked" />
                                    <vsm:VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="IndeterminateIcon">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                                <Grid x:Name="grid"
                                  Height="14"
                                  Width="14"
                                  Opacity="0.7">
                                    <Rectangle x:Name="Background"
                                           Fill="{TemplateBinding Background}"
                                           Stroke="{TemplateBinding BorderBrush}"
                                           StrokeThickness="{TemplateBinding BorderThickness}" />
                                    <Rectangle x:Name="MouseOverRectangle"
                                           Stroke="{StaticResource CheckBoxMouseOverBrush}"
                                           Opacity="0" />
                                    <Rectangle x:Name="PressedRectangle"
                                           Stroke="{StaticResource BlackBrush}"
                                           Opacity="0" />
                                    <Path Opacity="0"
                                      x:Name="CheckIcon"
                                      Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883"
                                      HorizontalAlignment="Center"
                                      Height="7.6"
                                      Stretch="Fill"
                                      Stroke="Black"
                                      UseLayoutRounding="False"
                                      VerticalAlignment="Center"
                                      Width="8.9"
                                      StrokeStartLineCap="Triangle"
                                      StrokeEndLineCap="Triangle"
                                      StrokeThickness="2" />
                                    <Rectangle x:Name="IndeterminateIcon"
                                           Height="8"
                                           Width="8"
                                           Opacity="0">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{StaticResource Gray3}"
                                                         PresentationOptions:Freeze="True" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="DisabledVisualElement"
                                           Fill="{StaticResource DisabledWhiteColorBrush}"
                                           Opacity="0"
                                           RadiusY="1"
                                           RadiusX="1" />
                                </Grid>
                                <Border x:Name="ValidationErrorElement"
                                    BorderBrush="{StaticResource ControlsValidationBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Margin="1"
                                    ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="Collapsed">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="validationTooltip"
                                             IsHitTestVisible="True"
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             Placement="Right"
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             Template="{StaticResource ValidationToolTipTemplate}" />
                                    </ToolTipService.ToolTip>
                                    <Grid Background="Transparent"
                                      HorizontalAlignment="Right"
                                      Height="10"
                                      Margin="0,-4,-4,0"
                                      VerticalAlignment="Top"
                                      Width="10">
                                        <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z"
                                          Fill="{StaticResource ValidationBrush5}"
                                          Margin="0,3,0,0" />
                                        <Path Data="M 0,0 L2,0 L 7,5 L7,7"
                                          Fill="{StaticResource WhiteColorBrush}"
                                          Margin="0,3,0,0" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentControl x:Name="ContentRoot"
                                        Grid.Column="1"
                                        Focusable="False">
                                <ContentControl.Foreground>
                                    <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </ContentControl.Foreground>

                                <AccessText x:Name="contentPresenter"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Text="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Padding}" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent"
                                 Value="False">
                                <Setter TargetName="ContentRoot"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--PasswordBox Style-->
        <Style TargetType="PasswordBox"
           x:Key="DefaultPasswordBoxStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
            <Setter Property="MinHeight"
                Value="26" />
            <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource TextBoxText}"
                                 PresentationOptions:Freeze="True" />
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="175"/>
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding"
                Value="0" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid x:Name="RootElement">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>

                            <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                            <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                            <Grid Margin="0,1,0,0">
                                <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource ReadOnlyBrush}"
                                    Opacity="0" />
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Margin="4,0,4,2"
                                              VerticalAlignment="Center"
                                              Background="{x:Null}" />
                                </Grid>
                            </Grid>
                            <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{StaticResource ControlsDisabledBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                            <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ProgressBar Style-->
        <Style TargetType="ProgressBar"
           x:Key="DefaultProgressBarStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource HighlightBrush}" />
            <Setter Property="Background"
                Value="White" />
            <Setter Property="Maximum"
                Value="100" />
            <Setter Property="Height"
                Value="10" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="BorderThickness"
                Value="1" />
        </Style>

        <!--RadioButton Style-->
        <Style TargetType="RadioButton"
           x:Key="DefaultRadioButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="Background"
                Value="{StaticResource CheckBoxBackgroundBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
            <Setter Property="Padding"
                Value="4,0,0,0" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverEllipse">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource Gray2}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.55" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CheckStates">
                                    <vsm:VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckIcon">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unchecked" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                                <Grid x:Name="grid"
                                  Height="15"
                                  Width="15"
                                  Opacity="0.7">
                                    <Ellipse x:Name="Background"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         Margin="1"
                                         StrokeThickness="{TemplateBinding BorderThickness}" />
                                    <Ellipse x:Name="MouseOverEllipse"
                                         Stroke="{StaticResource CheckBoxMouseOverBrush}"
                                         Margin="1"
                                         Opacity="0" />
                                    <Ellipse x:Name="PressedEllipse"
                                         Stroke="{StaticResource BlackBrush}"
                                         Margin="1"
                                         Opacity="0" />
                                    <Ellipse x:Name="CheckIcon"
                                         Fill="{StaticResource BlackBrush}"
                                         Height="7"
                                         Opacity="0"
                                         Width="7" />
                                    <Ellipse x:Name="DisabledVisualElement"
                                         Fill="{StaticResource DisabledWhiteColorBrush}"
                                         Opacity="0" />
                                    <Grid x:Name="ValidationErrorElement"
                                      ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Visibility="Collapsed">
                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Name="validationTooltip"
                                                 IsHitTestVisible="True"
                                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 Placement="Right"
                                                 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 Template="{StaticResource ValidationToolTipTemplate}" />
                                        </ToolTipService.ToolTip>
                                        <Ellipse Height="14"
                                             Stroke="{StaticResource ControlsValidationBrush}"
                                             StrokeThickness="1"
                                             Width="14" />
                                        <Ellipse Fill="{StaticResource ControlsValidationBrush}"
                                             HorizontalAlignment="Right"
                                             Height="4"
                                             Margin="0,-2,-1,0"
                                             VerticalAlignment="Top"
                                             Width="4" />
                                        <Ellipse Fill="Transparent"
                                             HorizontalAlignment="Right"
                                             Height="10"
                                             Margin="0,-5,-4,0"
                                             VerticalAlignment="Top"
                                             Width="10" />
                                    </Grid>
                                </Grid>
                            </Grid>
                            <ContentControl Grid.Column="1"
                                        VerticalAlignment="Center">
                                <ContentControl.Foreground>
                                    <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </ContentControl.Foreground>
                                <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RenderOptions.ClearTypeHint="Enabled" />
                            </ContentControl>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--RepeatButton Style-->
        <Style TargetType="RepeatButton"
           x:Key="DefaultRepeatButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="FontWeight"
                Value="Bold" />
            <Setter Property="Padding"
                Value="5,6" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3" />
                            <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   RadiusY="3"
                                   RadiusX="3" />
                            <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   RadiusY="4"
                                   RadiusX="4"
                                   Margin="-1"
                                   Opacity="0" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Thumb Style-->
        <Style x:Key="HorizontalSliderThumb"
           TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard />
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard />
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="{StaticResource BlackBrush}"
                                BorderThickness="0,0,1,0"
                                BorderBrush="{StaticResource ControlBackgroundBrush}" />
                            <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--HorizontalTrackLargeDecrease-->
        <ControlTemplate x:Key="HorizontalTrackLargeDecrease"
                     TargetType="RepeatButton">
            <Grid x:Name="Root"
              Margin="0,-1,0,0">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Rectangle Height="3"
                       Margin="0,1,0,0">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="{StaticResource BlackColor}"
                                     PresentationOptions:Freeze="True" />
                    </Rectangle.Fill>
                </Rectangle>
            </Grid>
        </ControlTemplate>

        <!--Slider Style-->
        <Style TargetType="Slider"
           x:Key="DefaultSliderStyle">
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Maximum"
                Value="10" />
            <Setter Property="Minimum"
                Value="0" />
            <Setter Property="Value"
                Value="0" />
            <Setter Property="BorderBrush"
                Value="{StaticResource ControlBorderBrush}" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="OverridesDefaultStyle"
                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid x:Name="Root">
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="0" />
                            </Grid.LayoutTransform>
                            <Grid.Resources>
                                <ControlTemplate x:Key="RepeatButtonTemplate">
                                    <Grid x:Name="Root"
                                      Opacity="0" />
                                </ControlTemplate>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ThumbDisabledOverlay">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ThumbDisabledOverlayVertical">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay_Copy">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay_Copy">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HorizontalTemplate"
                              Background="{TemplateBinding Background}">
                                <Rectangle x:Name="TrackRectangle"
                                       Height="3"
                                       Margin="5,0"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Fill="{StaticResource SliderTrackBrush}" />
                                <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Height="3"
                                       Margin="5,0,5,0"
                                       Opacity=".55"
                                       Visibility="Collapsed" />
                                <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay_Copy"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Height="4"
                                       Opacity="0.7"
                                       Visibility="Collapsed" />
                                <Track x:Name="PART_Track"
                                   Margin="5,0"
                                   Orientation="Horizontal">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton"
                                                  Height="10"
                                                  IsTabStop="False"
                                                  Template="{StaticResource HorizontalTrackLargeDecrease}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="HorizontalThumb"
                                           Height="10"
                                           IsTabStop="True"
                                           Width="4"
                                           Style="{StaticResource HorizontalSliderThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton"
                                                  Height="10"
                                                  IsTabStop="False"
                                                  Template="{StaticResource RepeatButtonTemplate}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                                <Rectangle x:Name="ThumbDisabledOverlay"
                                       Grid.Column="1"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Opacity="0.25"
                                       Visibility="Collapsed"
                                       Width="4"
                                       Height="10" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation"
                                 Value="Vertical">
                                <Setter Property="LayoutTransform"
                                    TargetName="Root">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ToggleButton Style-->
        <Style TargetType="ToggleButton"
           x:Key="DefaultToggleButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="FontWeight"
                Value="Bold" />
            <Setter Property="Padding"
                Value="5,6" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CheckStates">
                                    <vsm:VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckedInnerRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unchecked" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3" />
                            <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource WhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   RadiusY="3"
                                   RadiusX="3" />
                            <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Border x:Name="CheckedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0" />
                            <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   RadiusY="4"
                                   RadiusX="4"
                                   Margin="-1"
                                   Opacity="0" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Opacity="0" />
                            <Rectangle x:Name="CheckedRectangle"
                                   Stroke="{StaticResource GrayBrush1}"
                                   RadiusY="4"
                                   RadiusX="4"
                                   Margin="-1"
                                   Opacity="0" />
                            <Rectangle x:Name="CheckedInnerRectangle"
                                   Fill="{StaticResource GrayBrush2}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource GrayBrush2}"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Tooltip Style-->
        <Style TargetType="ToolTip"
           x:Key="DefaultToolTipStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontSize"
                Value="{StaticResource ControlContentFontSize}" />
            <Setter Property="FontWeight"
                Value="Bold" />
            <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
            <Setter Property="Padding"
                Value="1" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="BorderBrush"
                Value="{StaticResource ItemSelectedBrush}" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border x:Name="Root"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Effect="{StaticResource DropShadowBrush}"
                            Opacity="0">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="OpenStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition From="Open"
                                                          GeneratedDuration="0:0:0.3"
                                                          To="Closed" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Closed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4"
                                                                  Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Open">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border Padding="{TemplateBinding Padding}">
                                <Border.Resources>
                                    <Storyboard x:Key="Visible State" />
                                    <Storyboard x:Key="Normal State" />
                                </Border.Resources>
                                <ContentPresenter Cursor="{TemplateBinding Cursor}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              Opacity="0.7"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RenderOptions.ClearTypeHint="Enabled" />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Implicit Styles -->
        <!-- When defining your own styles, set "based on" the same way to keep control theming -->
        <Style TargetType="Button"
           BasedOn="{StaticResource DefaultButtonStyle}" />
        <!--<Style TargetType="Button" BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" />-->
        <Style TargetType="TextBox"
           BasedOn="{StaticResource DefaultTextBoxStyle}" />
        <Style TargetType="ComboBox"
           BasedOn="{StaticResource DefaultComboBoxStyle}" />
        <Style TargetType="ComboBoxItem"
           BasedOn="{StaticResource DefaultComboBoxItemStyle}" />
        <Style TargetType="TextBlock"
           BasedOn="{StaticResource DefaultTextBlockStyle}" />
        <Style TargetType="ScrollBar"
           BasedOn="{StaticResource DefaultScrollBarStyle}" />
        <Style TargetType="ScrollViewer"
           BasedOn="{StaticResource DefaultScrollViewerStyle}" />
        <Style TargetType="ListBox"
           BasedOn="{StaticResource DefaultListBoxStyle}" />
        <Style TargetType="ListBoxItem"
           BasedOn="{StaticResource DefaultListBoxItemStyle}" />
        <Style TargetType="CheckBox"
           BasedOn="{StaticResource DefaultCheckBoxStyle}" />
        <Style TargetType="PasswordBox"
           BasedOn="{StaticResource DefaultPasswordBoxStyle}" />
        <Style TargetType="ProgressBar"
           BasedOn="{StaticResource DefaultProgressBarStyle}" />
        <Style TargetType="RadioButton"
           BasedOn="{StaticResource DefaultRadioButtonStyle}" />
        <Style TargetType="RepeatButton"
           BasedOn="{StaticResource DefaultRepeatButtonStyle}" />
        <Style TargetType="Slider"
           BasedOn="{StaticResource DefaultSliderStyle}" />
        <Style TargetType="ToggleButton"
           BasedOn="{StaticResource DefaultToggleButtonStyle}" />
        <Style TargetType="ToolTip"
           BasedOn="{StaticResource DefaultToolTipStyle}" />



        <!--DataPagerPageButtonImageButton Style-->
        <Style x:Key="ImageButton"
           TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{StaticResource GrayBrush3}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Padding"
                Value="3" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition From="Normal"
                                                          GeneratedDuration="0:0:0.3"
                                                          To="MouseOver" />
                                        <vsm:VisualTransition From="MouseOver"
                                                          GeneratedDuration="0:0:0.3"
                                                          To="Normal" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.6" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                            <Ellipse x:Name="ellipse"
                                 Stroke="{StaticResource CheckBoxMouseOverBrush}"
                                 Opacity="0.3"
                                 Fill="Transparent" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--DataGridColumnHeader Style-->
        <Style TargetType="DataGridColumnHeader"
           x:Key="DefaultDataGridColumnHeaderStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ControlTitleFontSize}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Center" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="SeparatorBrush"
                Value="{StaticResource SeperatorBrush}" />
            <Setter Property="Padding"
                Value="4,5,4,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border BorderBrush="Black"
                            BorderThickness="0,1">
                            <Border.Resources>
                                <Style x:Key="ColumnHeaderGripperStyle"
                                   TargetType="Thumb">
                                    <Setter Property="Width"
                                        Value="2" />
                                    <Setter Property="Background"
                                        Value="Transparent" />
                                    <Setter Property="Cursor"
                                        Value="SizeWE" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Padding="{TemplateBinding Padding}"
                                                    Background="{TemplateBinding Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Border.Resources>

                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverLeftRightSeperator">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedLeftRightSeperator">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SortStates">
                                    <vsm:VisualState x:Name="Unsorted" />
                                    <vsm:VisualState x:Name="SortAscending">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1.0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="SortIcon" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SortDescending">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1.0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="SortIcon" />
                                            <DoubleAnimation Duration="0"
                                                         To="-.9"
                                                         Storyboard.TargetProperty="(RenderTransform).ScaleY"
                                                         Storyboard.TargetName="SortIcon" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>

                            <Grid x:Name="Root"
                              Height="30">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="BackgroundRectangle"
                                       Grid.ColumnSpan="2"
                                       Stretch="Fill"
                                       Fill="{StaticResource WhiteBrush}" />
                                <Rectangle x:Name="MouseOverRectangle"
                                       Grid.ColumnSpan="2"
                                       Opacity="0">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{StaticResource Gray8}"
                                                     PresentationOptions:Freeze="True" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="PressedRectangle"
                                       Grid.ColumnSpan="2"
                                       Opacity="0">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{StaticResource Gray8}"
                                                     PresentationOptions:Freeze="True" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                                    <Path x:Name="SortIcon"
                                      Grid.Column="1"
                                      Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z "
                                      Fill="{StaticResource GrayBrush3}"
                                      HorizontalAlignment="Left"
                                      Margin="4,0,0,0"
                                      Opacity="0"
                                      RenderTransformOrigin=".5,.5"
                                      Stretch="Uniform"
                                      VerticalAlignment="Center"
                                      Width="8">
                                        <Path.RenderTransform>
                                            <ScaleTransform ScaleY=".9"
                                                        ScaleX=".9" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <Rectangle x:Name="VerticalSeparator"
                                       Grid.Column="1"
                                       Fill="{TemplateBinding SeparatorBrush}"
                                       Visibility="{TemplateBinding SeparatorVisibility}"
                                       VerticalAlignment="Stretch"
                                       Width="1"
                                       Opacity="0" />
                                <Border x:Name="MouseOverLeftRightSeperator"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="1,0"
                                    BorderBrush="{StaticResource SeperatorBrush}"
                                    Margin="-1,0,0,0"
                                    Opacity="0" />
                                <Border x:Name="PressedLeftRightSeperator"
                                    Grid.ColumnSpan="2"
                                    Opacity="0"
                                    BorderBrush="{StaticResource SeperatorBrush}"
                                    BorderThickness="1,0"
                                    Margin="-1,0,0,0" />
                                <Thumb x:Name="PART_LeftHeaderGripper"
                                   Grid.RowSpan="2"
                                   Grid.Column="2"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource ColumnHeaderGripperStyle}" />
                                <Thumb x:Name="PART_RightHeaderGripper"
                                   Grid.RowSpan="2"
                                   Grid.Column="2"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource ColumnHeaderGripperStyle}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Block.TextAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid>
                        <ContentPresenter VerticalAlignment="Center"  HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

        <!--DataGridRow Style-->
        <Style TargetType="DataGridRow"
           x:Key="DefaultDataGridRowStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Height"
                Value="23" />
            <Setter Property="FontSize"
                Value="{StaticResource RegularDataGridFontSize}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Center" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="HorizontalAlignment"
                Value="Center" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True" >
                <Setter Property="Background" Value="{StaticResource BtnOverFill}"></Setter>
                </Trigger>
            </Style.Triggers>
    </Style>

        <!--DataGrid Style-->
        <Style TargetType="DataGrid"
           x:Key="DefaultDataGridStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="Background"
                Value="{StaticResource WhiteColorBrush}" />
            <Setter Property="BorderThickness"
                Value="0" />
            <Setter Property="RowHeaderWidth"
                Value="0" />
        <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
            <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
            <Setter Property="RowBackground"
                Value="Transparent" />
            <Setter Property="AlternatingRowBackground"
                Value="Transparent" />
            <Setter Property="HorizontalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="HorizontalGridLinesBrush"
                Value="{StaticResource GrayBrush2}" />
            <Setter Property="VerticalGridLinesBrush"
                Value="{StaticResource GrayBrush2}" />
            <Setter Property="IsTabStop"
                Value="True" />
        </Style>

        <!--CalendarItem Style-->
        <Style TargetType="CalendarItem"
           x:Key="DefaultCalendarItemStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CalendarItem">
                        <ControlTemplate.Resources>
                            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                                <TextBlock Foreground="{StaticResource TextBoxMouseOverBorderBrush}"
                                       FontWeight="Bold"
                                       FontSize="12"
                                       Margin="0,4,0,4"
                                       Text="{Binding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                            </DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid x:Name="PART_Root">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush"
                                             Color="{StaticResource TransparentLightLightColor}"
                                             PresentationOptions:Freeze="True" />
                            </Grid.Resources>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Margin="0">
                                <Grid Margin="2">
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="HeaderButtonTemplate"
                                                     TargetType="Button">
                                            <Grid Cursor="Hand">
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal" />
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0"
                                                                            To="{StaticResource AccentColorLightBlue}"
                                                                            Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="Content" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0"
                                                                             To=".5"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             Storyboard.TargetName="Content" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <ContentControl x:Name="Content"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Content="{TemplateBinding Content}"
                                                            Foreground="{StaticResource GrayBrush3}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            IsTabStop="False"
                                                            Margin="1,5,1,9"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="PreviousButtonTemplate"
                                                     TargetType="Button">
                                            <Grid Cursor="Hand">
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal" />
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0"
                                                                            To="{StaticResource AccentColorLightBlue}"
                                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="IconPath" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0"
                                                                             To=".5"
                                                                             Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                                             Storyboard.TargetName="IconPath" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <Rectangle Fill="{StaticResource TransparentWhiteBrush}"
                                                       Opacity="1"
                                                       Stretch="Fill" />
                                                <Grid>
                                                    <Path x:Name="IconPath"
                                                      Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                      Fill="{StaticResource GrayBrush3}"
                                                      HorizontalAlignment="Left"
                                                      Height="10"
                                                      Margin="14,-6,0,0"
                                                      Stretch="Fill"
                                                      VerticalAlignment="Center"
                                                      Width="6" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate"
                                                     TargetType="Button">
                                            <Grid Cursor="Hand">
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal" />
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0"
                                                                            To="{StaticResource AccentColorLightBlue}"
                                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="IconPath" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0"
                                                                             To=".5"
                                                                             Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                                             Storyboard.TargetName="IconPath" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <Rectangle Fill="{StaticResource TransparentWhiteBrush}"
                                                       Opacity="1"
                                                       Stretch="Fill" />
                                                <Grid>
                                                    <Path x:Name="IconPath"
                                                      Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                      Fill="{StaticResource GrayBrush3}"
                                                      HorizontalAlignment="Right"
                                                      Height="10"
                                                      Margin="0,-6,14,0"
                                                      Stretch="Fill"
                                                      VerticalAlignment="Center"
                                                      Width="6" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Cursor="Hand"
                                        HorizontalAlignment="Left"
                                        Height="24"
                                        Width="24"
                                        Margin="13,0,0,0"
                                        Style="{StaticResource ImageButton}">
                                        <Grid>
                                            <Path x:Name="PreviousIconPath"
                                              Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                              Fill="{StaticResource CheckBoxMouseOverBrush}"
                                              HorizontalAlignment="Left"
                                              Height="10"
                                              Stretch="Fill"
                                              VerticalAlignment="Center"
                                              Width="6"
                                              Opacity="0.7" />
                                        </Grid>
                                    </Button>
                                    <Button x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderBrush="{x:Null}"
                                        BorderThickness="0"
                                        Foreground="{StaticResource HighlightBrush}"
                                        FontWeight="Bold"
                                        FontSize="13.333"
                                        HorizontalAlignment="Center"
                                        Cursor="Hand"
                                        Height="30"
                                        VerticalAlignment="Center"
                                        Width="Auto" />
                                    <Button x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        HorizontalAlignment="Right"
                                        Height="24"
                                        Width="24"
                                        Cursor="Hand"
                                        Margin="0,0,13,0"
                                        Style="{StaticResource ImageButton}">
                                        <Path x:Name="NextIconPath"
                                          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                          Fill="{StaticResource CheckBoxMouseOverBrush}"
                                          HorizontalAlignment="Right"
                                          Height="10"
                                          Stretch="Fill"
                                          VerticalAlignment="Center"
                                          Width="6"
                                          Opacity="0.7" />
                                    </Button>
                                    <Grid x:Name="PART_MonthView"
                                      Grid.ColumnSpan="3"
                                      Margin="15,7,15,6"
                                      Grid.Row="1"
                                      Visibility="Visible"
                                      HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView"
                                      Grid.ColumnSpan="3"
                                      Margin="6,7,7,6"
                                      Grid.Row="1"
                                      Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                            <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="{StaticResource DisabledBrush}"
                                   Margin="0,2,0,2"
                                   Opacity="0"
                                   Stretch="Fill"
                                   Stroke="{StaticResource DisabledBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter Property="Visibility"
                                    TargetName="PART_DisabledVisual"
                                    Value="Visible" />
                            </Trigger>
                            <DataTrigger Value="Year">
                                <DataTrigger.Binding>
                                    <Binding Path="DisplayMode">
                                        <Binding.RelativeSource>
                                            <RelativeSource Mode="FindAncestor"
                                                        AncestorType="{x:Type Calendar}" />
                                        </Binding.RelativeSource>
                                    </Binding>
                                </DataTrigger.Binding>
                                <Setter TargetName="PART_MonthView"
                                    Property="Visibility"
                                    Value="Hidden" />
                                <Setter TargetName="PART_YearView"
                                    Property="Visibility"
                                    Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="Decade">
                                <DataTrigger.Binding>
                                    <Binding Path="DisplayMode">
                                        <Binding.RelativeSource>
                                            <RelativeSource Mode="FindAncestor"
                                                        AncestorType="{x:Type Calendar}" />
                                        </Binding.RelativeSource>
                                    </Binding>
                                </DataTrigger.Binding>
                                <Setter TargetName="PART_MonthView"
                                    Property="Visibility"
                                    Value="Hidden" />
                                <Setter TargetName="PART_YearView"
                                    Property="Visibility"
                                    Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Calendar Style-->
        <Style x:Key="DefaultCalendarStyle"
           TargetType="Calendar">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Padding"
                Value="1" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Calendar">
                        <StackPanel x:Name="PART_Root"
                                HorizontalAlignment="Center"
                                RenderTransformOrigin="0.5,0.5">
                            <StackPanel.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </StackPanel.RenderTransform>
                            <CalendarItem x:Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      Margin="0"
                                      Padding="0"
                                      FontWeight="Bold" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CalendarDayButton Style-->
        <Style TargetType="CalendarDayButton"
           x:Key="DefaultCalendarDayButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{x:Null}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="FontWeight"
                Value="Bold" />
            <Setter Property="HorizontalContentAlignment"
                Value="Center" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="MinWidth"
                Value="8" />
            <Setter Property="MinHeight"
                Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CalendarDayButton">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0:0:0.1" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.695" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>

                                            <DoubleAnimation Duration="0"
                                                         To=".35"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Content" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ActiveStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Active" />
                                    <vsm:VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray3}"
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                        Storyboard.TargetName="Content" />
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray3}"
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                        Storyboard.TargetName="Content" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="DayStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="RegularDay" />
                                    <vsm:VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="TodayBackground" />
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                                         Storyboard.TargetName="Content" />
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                                         Storyboard.TargetName="Content" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="BlackoutDayStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="NormalDay" />
                                    <vsm:VisualState x:Name="BlackoutDay">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To=".2"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="BlackoutVisual" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="TodayBackground"
                                   Opacity="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray2}"
                                                 PresentationOptions:Freeze="True" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                            <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource Gray5}"
                                                 PresentationOptions:Freeze="True" />
                                </Border.Background>
                            </Border>
                            <ContentControl x:Name="Content"
                                        FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsTabStop="False"
                                        Margin="5,1,5,1"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentControl.Foreground>
                                    <LinearGradientBrush>
                                        <GradientStop Color="{StaticResource WhiteColor}"
                                                  Offset="0" />
                                        <GradientStop Color="{StaticResource WhiteColor}"
                                                  Offset="0" />
                                        <GradientStop Color="{StaticResource Gray3}"
                                                  Offset="0" />
                                        <GradientStop Color="{StaticResource Gray3}"
                                                  Offset="1" />
                                    </LinearGradientBrush>
                                </ContentControl.Foreground>
                            </ContentControl>
                            <Path x:Name="BlackoutVisual"
                              Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                              Fill="{StaticResource BlackColorBrush}"
                              HorizontalAlignment="Stretch"
                              Margin="3"
                              Opacity="0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill"
                              VerticalAlignment="Stretch" />
                            <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CalendarButton Style-->
        <Style TargetType="CalendarButton"
           x:Key="DefaultCalendarButtonStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{x:Null}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Center" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="MinWidth"
                Value="40" />
            <Setter Property="MinHeight"
                Value="42" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CalendarButton">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0:0:0.1" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.695" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ActiveStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Active" />
                                    <vsm:VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray3}"
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Content" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                            <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource Gray5}"
                                                 PresentationOptions:Freeze="True" />
                                </Border.Background>
                            </Border>
                            <ContentControl x:Name="Content"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        Foreground="{StaticResource GrayBrush3}"
                                        FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsTabStop="False"
                                        Margin="1,0,1,1"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--DatePickerTextBox Style-->
        <Style TargetType="TextBox"
           x:Key="DefaultDatePickerTextBoxStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
            <Setter Property="MinHeight"
                Value="26" />
            <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Padding"
                Value="0" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="RootElement">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                            <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                            <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                            <Grid Margin="0,1,0,0">
                                <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource ReadOnlyBrush}"
                                    Opacity="0" />
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Margin="4,0,4,2"
                                              VerticalAlignment="Center"
                                              Background="{x:Null}" />
                                </Grid>
                            </Grid>
                            <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{StaticResource ControlsDisabledBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                            <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--DatePicker Style-->
        <Style TargetType="DatePicker"
           x:Key="DefaultDatePickerStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
            <Setter Property="HorizontalAlignment"
                Value="Left" />
            <Setter Property="Padding"
                Value="2" />
            <!--<Setter Property="SelectionBackground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource AccentColorBlue}"/>
            </Setter.Value>
        </Setter>-->
            <Setter Property="MinHeight"
                Value="26" />
            <Setter Property="Height"
                Value="26" />
            <Setter Property="Width"
                Value="150" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="CalendarStyle"
                Value="{StaticResource DefaultCalendarStyle}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Grid x:Name="PART_Root">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush"
                                             Color="{StaticResource TransparentLightLightColor}"
                                             PresentationOptions:Freeze="True" />
                                <ControlTemplate x:Key="DropDownButtonTemplate"
                                             TargetType="Button">
                                    <Grid FlowDirection="LeftToRight">
                                        <vsm:VisualStateManager.VisualStateGroups>
                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                <vsm:VisualStateGroup.Transitions>
                                                    <vsm:VisualTransition GeneratedDuration="0" />
                                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1"
                                                                      To="MouseOver" />
                                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1"
                                                                      To="Pressed" />
                                                </vsm:VisualStateGroup.Transitions>
                                                <vsm:VisualState x:Name="Normal" />
                                                <vsm:VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="MouseOverBorder">
                                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="PressedBorder">
                                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                                   Duration="00:00:00.001"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="DisabledVisual">
                                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                              Value="0.595" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                            </vsm:VisualStateGroup>
                                        </vsm:VisualStateManager.VisualStateGroups>
                                        <Grid Background="{StaticResource TransparentWhiteBrush}"
                                          HorizontalAlignment="Center"
                                          Height="18"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*" />
                                                <RowDefinition Height="19*" />
                                                <RowDefinition Height="19*" />
                                                <RowDefinition Height="19*" />
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Background"
                                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                Margin="0,-1,0,0"
                                                Opacity="1"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{StaticResource Gray7}"
                                                                 PresentationOptions:Freeze="True" />
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4"
                                                   Grid.RowSpan="1"
                                                   StrokeThickness="1"
                                                   Stroke="{StaticResource TextBoxBorderBrush}"
                                                   Fill="{StaticResource TextBoxMouseOverBorderBrush}" />
                                            <Border x:Name="MouseOverBorder"
                                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                Margin="0,-1,0,0"
                                                Opacity="0"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{StaticResource Gray8}"
                                                                 PresentationOptions:Freeze="True" />
                                                </Border.Background>
                                            </Border>
                                            <Border x:Name="PressedBorder"
                                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                Margin="0,-1,0,0"
                                                Opacity="0"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{StaticResource Gray5}"
                                                                 PresentationOptions:Freeze="True" />
                                                </Border.Background>
                                            </Border>
                                            <Path Grid.ColumnSpan="4"
                                              Grid.Column="0"
                                              Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                              Fill="{StaticResource GrayBrush3}"
                                              HorizontalAlignment="Center"
                                              Margin="4,3,4,3"
                                              Grid.Row="1"
                                              Grid.RowSpan="3"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill"
                                              VerticalAlignment="Center" />
                                            <Ellipse Grid.ColumnSpan="4"
                                                 Fill="{StaticResource WhiteColorBrush}"
                                                 HorizontalAlignment="Center"
                                                 Height="3"
                                                 StrokeThickness="0"
                                                 VerticalAlignment="Center"
                                                 Width="3" />
                                            <Border x:Name="DisabledVisual"
                                                BorderBrush="{StaticResource TransparentLightLightBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                CornerRadius="0,0,.5,.5"
                                                Opacity="0"
                                                Grid.Row="0"
                                                Grid.RowSpan="4"
                                                Background="White" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DatePickerTextBox x:Name="PART_TextBox"
                                           BorderBrush="{TemplateBinding BorderBrush}"
                                           BorderThickness="{TemplateBinding BorderThickness}"
                                           Background="{TemplateBinding Background}"
                                           Grid.Column="0"
                                           Padding="{TemplateBinding Padding}" />
                            <Button x:Name="PART_Button"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="2,0,2,0"
                                Template="{StaticResource DropDownButtonTemplate}"
                                Width="20" />
                            <Grid x:Name="PART_DisabledVisual"
                              Grid.ColumnSpan="2"
                              IsHitTestVisible="False"
                              Opacity="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="{StaticResource TransparentLightLightBrush}"
                                       RadiusY="1"
                                       RadiusX="1" />
                                <Rectangle Grid.Column="1"
                                       Fill="{StaticResource TransparentLightLightBrush}"
                                       Height="18"
                                       Margin="2,0,2,0"
                                       RadiusY="1"
                                       RadiusX="1"
                                       Width="19" />
                            </Grid>
                            <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_TextBox}"
                               StaysOpen="False" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        </Style>

        <!--Label Style-->
        <Style TargetType="Label"
           x:Key="DefaultLabelStyle">
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ControlColor"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource Gray7}" />
                                            </ColorAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="Invalid">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0:0:1.5"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="ContentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="Red" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="RequiredStates">
                                    <vsm:VisualState x:Name="NotRequired" />
                                    <vsm:VisualState x:Name="Required">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="FontWeight"
                                                                       Storyboard.TargetName="ContentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="SemiBold" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                Padding="{TemplateBinding Padding}">
                                <ContentControl x:Name="ContentControl"
                                            Cursor="{TemplateBinding Cursor}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            FontStretch="{TemplateBinding FontStretch}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            IsTabStop="False"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentControl.Foreground>
                                        <SolidColorBrush x:Name="ControlColor"
                                                     Color="{StaticResource BlackColor}" />
                                    </ContentControl.Foreground>
                                </ContentControl>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        </Style>

        <!--GridSplitter Style-->
        <Style TargetType="GridSplitter"
           x:Key="DefaultGridSplitterStyle">
            <Setter Property="Background"
                Value="{StaticResource WhiteColorBrush}" />
            <Setter Property="IsTabStop"
                Value="true" />
            <Setter Property="HorizontalAlignment"
                Value="Right" />
            <Setter Property="PreviewStyle">
                <Setter.Value>
                    <Style TargetType="Control">
                        <Setter Property="Background"
                            Value="{StaticResource GrayBrush2}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Control">
                                    <Grid x:Name="Root"
                                      Opacity=".5">
                                        <Rectangle Fill="{TemplateBinding Background}" />
                                        <Grid x:Name="HorizontalTemplate"
                                          Height="6" />
                                        <Grid x:Name="VerticalTemplate"
                                          Visibility="Collapsed"
                                          Width="6" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridSplitter">
                        <Grid x:Name="Root"
                          IsHitTestVisible="{TemplateBinding IsEnabled}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisual" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Fill="{TemplateBinding Background}"
                                   StrokeThickness="0" />
                            <Grid x:Name="HorizontalTemplate"
                              Height="10"
                              Visibility="Hidden">
                                <Border BorderThickness="1"
                                    BorderBrush="{StaticResource TextBoxBorderBrush}">
                                    <Canvas Height="6"
                                        VerticalAlignment="Center"
                                        Width="12">
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="1"
                                          Canvas.Top="0.29">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="1.525">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="1"
                                          Canvas.Top="3.463">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="4.698">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="4.006"
                                          Canvas.Top="0.29">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="1.525"
                                          Canvas.Left="3.006">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="4.006"
                                          Canvas.Top="3.463">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="4.698"
                                          Canvas.Left="3.006">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="6.845"
                                          Canvas.Top="0.29">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="1.525"
                                          Canvas.Left="5.845">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="6.845"
                                          Canvas.Top="3.463">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="4.698"
                                          Canvas.Left="5.845">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="9.851"
                                          Canvas.Top="0.29">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="1.525"
                                          Canvas.Left="8.851">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="9.851"
                                          Canvas.Top="3.463">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="4.698"
                                          Canvas.Left="8.851">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Canvas>
                                </Border>
                            </Grid>
                            <Grid x:Name="VerticalTemplate"
                              Visibility="Visible"
                              Width="10">
                                <Border BorderThickness="1"
                                    BorderBrush="{StaticResource TextBoxBorderBrush}">
                                    <Canvas Width="6"
                                        Height="12">
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="1"
                                          Canvas.Top="0.29">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="1.525">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="1"
                                          Canvas.Top="3.463">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="4.698">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="1"
                                          Canvas.Top="6.302">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="7.537">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="1"
                                          Canvas.Top="8.974">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="10.209">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="4.006"
                                          Canvas.Top="0.29">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="1.525"
                                          Canvas.Left="3.006">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="4.006"
                                          Canvas.Top="3.463">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="4.698"
                                          Canvas.Left="3.006">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="4.006"
                                          Canvas.Top="6.302">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="7.537"
                                          Canvas.Left="3.006">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M405.14063,248.65625 L405.14063,250.01588"
                                          Fill="White"
                                          Height="2.36"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Width="1"
                                          StrokeThickness="0.25"
                                          Canvas.Left="4.006"
                                          Canvas.Top="8.974">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M404.76563,249.82813 L406.984,249.82813"
                                          Fill="White"
                                          Height="0.25"
                                          Stretch="Fill"
                                          StrokeThickness="0.25"
                                          UseLayoutRounding="False"
                                          Width="2.468"
                                          Canvas.Top="10.209"
                                          Canvas.Left="3.006">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource Gray2}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Canvas>
                                </Border>
                            </Grid>
                            <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   StrokeThickness="1">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource HighlightDarkColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ResizeDirection"
                                 Value="Rows">
                                <Setter Property="Visibility"
                                    TargetName="VerticalTemplate"
                                    Value="Hidden" />
                                <Setter Property="Visibility"
                                    TargetName="HorizontalTemplate"
                                    Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        </Style>

        <!--TreeView Style-->
        <Style TargetType="TreeView"
           x:Key="DefaultTreeViewStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
            <Setter Property="Cursor"
                Value="Arrow" />
            <Setter Property="BorderThickness"
                Value="0" />
            <Setter Property="Padding"
                Value="1" />
            <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
            <Setter Property="IsTabStop"
                Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver" />
                                    <vsm:VisualState x:Name="Pressed" />
                                    <vsm:VisualState x:Name="Disabled" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Unfocused" />
                                    <vsm:VisualState x:Name="Focused" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="Validation">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="Validation">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="ValidationToolTip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Border Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}">
                                    <ScrollViewer x:Name="ScrollViewer"
                                              Focusable="False"
                                              IsTabStop="False"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              CanContentScroll="False">
                                        <ItemsPresenter Margin="5" />
                                    </ScrollViewer>
                                </Border>
                            </Border>
                            <Border x:Name="Validation"
                                BorderBrush="{StaticResource ValidationBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="1"
                                CornerRadius="2"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="ValidationToolTip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         IsHitTestVisible="True"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource CommonValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="10">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 Z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="-1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="-1,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TreeViewItem Style-->
        <Style TargetType="TreeViewItem"
           x:Key="DefaultTreeViewItemStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="Padding"
                Value="3" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Top" />
            <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Cursor"
                Value="Arrow" />
            <Setter Property="IsTabStop"
                Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
            <Setter Property="Margin"
                Value="0 1 0 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid Background="{x:Null}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver" />
                                    <vsm:VisualState x:Name="Pressed" />
                                    <vsm:VisualState x:Name="Disabled" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectWrapper"
                                                                      Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource WhiteColor}" />
                                            </ColorAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SelectedInactive">
                                        <Storyboard />
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="HasItemsStates">
                                    <vsm:VisualState x:Name="HasItems" />
                                    <vsm:VisualState x:Name="NoItems">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ExpanderButton">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ExpansionStates">
                                    <vsm:VisualState x:Name="Collapsed" />
                                    <vsm:VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ExpanderButton"
                                      HorizontalAlignment="Stretch"
                                      IsTabStop="False"
                                      KeyboardNavigation.TabNavigation="Once"
                                      VerticalAlignment="Stretch"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid x:Name="Root"
                                          Background="Transparent">
                                            <vsm:VisualStateManager.VisualStateGroups>
                                                <vsm:VisualStateGroup x:Name="CommonStates">
                                                    <vsm:VisualState x:Name="Normal" />
                                                    <vsm:VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                         To="1"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         Storyboard.TargetName="grid"
                                                                         d:IsOptimized="True" />
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                                      Storyboard.TargetName="UncheckedVisual">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                                 Value="White" />
                                                                <EasingColorKeyFrame KeyTime="0:0:0.4"
                                                                                 Value="{StaticResource AccentColorLightBlue}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </vsm:VisualState>
                                                    <vsm:VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                         To=".7"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         Storyboard.TargetName="Root" />
                                                        </Storyboard>
                                                    </vsm:VisualState>
                                                </vsm:VisualStateGroup>
                                                <vsm:VisualStateGroup x:Name="CheckStates">
                                                    <vsm:VisualState x:Name="Unchecked" />
                                                    <vsm:VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                         To="0"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         Storyboard.TargetName="UncheckedVisual"
                                                                         d:IsOptimized="True" />
                                                            <DoubleAnimation Duration="0"
                                                                         To="1"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         Storyboard.TargetName="CheckedVisual"
                                                                         d:IsOptimized="True" />
                                                        </Storyboard>
                                                    </vsm:VisualState>
                                                </vsm:VisualStateGroup>
                                            </vsm:VisualStateManager.VisualStateGroups>
                                            <Grid x:Name="grid"
                                              HorizontalAlignment="Right"
                                              Margin="2 2 5 2"
                                              Opacity="0.6">
                                                <Path x:Name="OldUncheckedVisual"
                                                  Data="M5.8535156,2.1822653 L10.195313,2.1822653 L10.195313,6.5152731 L14.537109,6.5152731 L14.537109,10.848281 L10.195313,10.848281 L10.195313,15.181289 L5.8535156,15.181289 L5.8535156,10.848281 L1.5205078,10.848281 L1.5205078,6.5152731 L5.8535156,6.5152731 z"
                                                  HorizontalAlignment="Right"
                                                  Height="8"
                                                  Margin="0"
                                                  Stretch="Fill"
                                                  UseLayoutRounding="False"
                                                  VerticalAlignment="Center"
                                                  Width="8"
                                                  Visibility="Collapsed">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource Gray3}"
                                                                     PresentationOptions:Freeze="True" />
                                                    </Path.Fill>
                                                </Path>
                                                <Path x:Name="OldCheckedVisual"
                                                  Data="M10.195313,6.5152731 L14.537109,6.5152731 14.537109,10.848281 10.195313,10.848281 5.8535156,10.848281 1.5205078,10.848281 1.5205078,6.5152731 5.8535156,6.5152731 z"
                                                  HorizontalAlignment="Right"
                                                  Height="2"
                                                  Stretch="Fill"
                                                  UseLayoutRounding="False"
                                                  VerticalAlignment="Center"
                                                  Width="8"
                                                  Visibility="Collapsed">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource Gray3}"
                                                                     PresentationOptions:Freeze="True" />
                                                    </Path.Fill>
                                                </Path>
                                                <Path x:Name="UncheckedVisual"
                                                  Data="M 0,0 L 0,9 L 5,4.5 Z"
                                                  HorizontalAlignment="Right"
                                                  Height="9"
                                                  StrokeThickness="1"
                                                  StrokeLineJoin="Miter"
                                                  VerticalAlignment="Center"
                                                  Width="6"
                                                  Margin="0,0,2,0"
                                                  UseLayoutRounding="False">
                                                    <Path.Fill>
                                                        <SolidColorBrush x:Name="BlankBackgroundBrush"
                                                                     Color="{StaticResource BaseColor2}"
                                                                     PresentationOptions:Freeze="True" />
                                                    </Path.Fill>
                                                    <Path.Stroke>
                                                        <SolidColorBrush x:Name="BaseBrush5"
                                                                     Color="{StaticResource BaseColor5}"
                                                                     PresentationOptions:Freeze="True" />
                                                    </Path.Stroke>
                                                </Path>
                                                <Path x:Name="CheckedVisual"
                                                  Data="M 6,0 L 6,6 L 0,6 Z"
                                                  HorizontalAlignment="Center"
                                                  Height="6"
                                                  Opacity="0"
                                                  StrokeLineJoin="Miter"
                                                  VerticalAlignment="Center"
                                                  Width="6"
                                                  Stroke="Black"
                                                  UseLayoutRounding="False">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource BaseColor3}"
                                                                     PresentationOptions:Freeze="True" />
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Rectangle x:Name="SelectedRectangle"
                                   Grid.Column="1"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource HighlightBrush}" />
                            <Rectangle x:Name="Selection"
                                   Grid.Column="1"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2"
                                   StrokeThickness="1">
                                <Rectangle.Fill>
                                    <SolidColorBrush x:Name="SelectionFill"
                                                 Color="{StaticResource AccentColorLightBlue}"
                                                 PresentationOptions:Freeze="True" />
                                </Rectangle.Fill>
                                <Rectangle.Stroke>
                                    <SolidColorBrush x:Name="SelectionStroke"
                                                 Color="{StaticResource AccentColorBlue}"
                                                 PresentationOptions:Freeze="True" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Button x:Name="PART_Header"
                                FontWeight="Light"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Cursor="{TemplateBinding Cursor}"
                                ClickMode="Hover"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsTabStop="False"
                                KeyboardNavigation.TabNavigation="Once"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Button.Foreground>
                                    <SolidColorBrush x:Name="HeaderWrapper"
                                                 Color="{StaticResource BlackColor}"
                                                 PresentationOptions:Freeze="True" />
                                </Button.Foreground>
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Grid Background="{TemplateBinding Background}">
                                            <vsm:VisualStateManager.VisualStateGroups>
                                                <vsm:VisualStateGroup x:Name="CommonStates">
                                                    <vsm:VisualState x:Name="Normal" />
                                                    <vsm:VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                                  Value="0.5" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                                      Storyboard.TargetProperty="Color">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                                 Value="{StaticResource WhiteColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </vsm:VisualState>
                                                    <vsm:VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                         To=".55"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         Storyboard.TargetName="Content" />
                                                        </Storyboard>
                                                    </vsm:VisualState>
                                                </vsm:VisualStateGroup>
                                            </vsm:VisualStateManager.VisualStateGroups>
                                            <Rectangle x:Name="MouseOverRectangle"
                                                   IsHitTestVisible="False"
                                                   Opacity="0"
                                                   Fill="{StaticResource HighlightBrush}" />
                                            <ContentControl Margin="0,-2">
                                                <ContentControl.Foreground>
                                                    <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                                 Color="{StaticResource BlackColor}"
                                                                 PresentationOptions:Freeze="True" />
                                                </ContentControl.Foreground>
                                                <ContentPresenter x:Name="Content"
                                                              Cursor="{TemplateBinding Cursor}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Content="{TemplateBinding Content}"
                                                              HorizontalAlignment="Left"
                                                              Margin="{TemplateBinding Padding}"
                                                              RenderOptions.ClearTypeHint="Enabled" />
                                            </ContentControl>
                                        </Grid>
                                    </ControlTemplate>
                                </Button.Template>
                                <ContentControl>
                                    <ContentControl.Foreground>
                                        <SolidColorBrush x:Name="SelectWrapper"
                                                     Color="{StaticResource BlackColor}"
                                                     PresentationOptions:Freeze="True" />
                                    </ContentControl.Foreground>
                                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  Content="{TemplateBinding Header}"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                                </ContentControl>
                            </Button>
                            <ItemsPresenter x:Name="ItemsHost"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Grid.Row="1"
                                        Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TabControl Style-->
        <Style TargetType="TabControl"
           x:Key="DefaultTabControlStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Background"
                Value="{x:Null}" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Gray1}" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"
                Value="0" />
            <Setter Property="Padding"
                Value="5" />
            <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid ClipToBounds="True"
                          SnapsToDevicePixels="True"
                          KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"
                                              Width="*" />
                                <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  Margin="5,2,2,-1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Panel.ZIndex="1" />
                            <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,0,0"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                                <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="1" />
                                <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="Auto" />
                                <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="2,-1,2,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Left">
                                <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="0" />
                                <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Grid.Column"
                                    TargetName="HeaderPanel"
                                    Value="0" />
                                <Setter Property="Grid.Column"
                                    TargetName="ContentPanel"
                                    Value="1" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="Auto" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0" />
                                <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="2,2,-1,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Right">
                                <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="0" />
                                <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Grid.Column"
                                    TargetName="HeaderPanel"
                                    Value="1" />
                                <Setter Property="Grid.Column"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="*" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="Auto" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0" />
                                <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="-1,2,2,2" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TabItem Style-->
        <Style TargetType="TabItem"
           x:Key="DefaultTabItemStyle">
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ControlTitleFontSize}" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="Background"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Background}" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Gray1}" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Padding"
                Value="6,2,6,2" />
            <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
            <Setter Property="MinWidth"
                Value="5" />
            <Setter Property="MinHeight"
                Value="5" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,0,0,1"
                                Background="{TemplateBinding Background}">
                                <Border x:Name="Bd2"
                                    BorderBrush="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="Content"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  Content="{TemplateBinding Header}"
                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                 Value="True">
                                <Setter Property="Panel.ZIndex"
                                    Value="1" />
                                <Setter Property="TextElement.FontWeight"
                                    TargetName="Content"
                                    Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                 Value="False">
                                <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="{StaticResource CheckBoxBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="False" />
                                    <Condition Property="IsMouseOver"
                                           Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="UIElement.Opacity"
                                    Value="0.6" />
                            </MultiTrigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="0,1,0,0" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Left">
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="0,0,1,0" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Right">
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="1,0,0,0" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="True" />
                                    <Condition Property="TabStripPlacement"
                                           Value="Top" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"
                                    TargetName="Content"
                                    Value="0,0,0,1" />
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="1,0" />
                                <Setter Property="BorderThickness"
                                    TargetName="Bd2"
                                    Value="0,0,0,1" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="True" />
                                    <Condition Property="TabStripPlacement"
                                           Value="Bottom" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"
                                    TargetName="Content"
                                    Value="0,1,0,0" />
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="1,0" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="True" />
                                    <Condition Property="TabStripPlacement"
                                           Value="Left" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"
                                    TargetName="Content"
                                    Value="0,0,1,0" />
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="0,1" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="True" />
                                    <Condition Property="TabStripPlacement"
                                           Value="Right" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"
                                    TargetName="Content"
                                    Value="1,0,0,0" />
                                <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="0,1" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter Property="UIElement.Opacity"
                                    Value="0.3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--AutoCompleteBoxTextBox Style-->
        <Style x:Key="AutoCompleteTextBox"
           TargetType="TextBox">
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Background"
                Value="{StaticResource WhiteColorBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="Padding"
                Value="2" />
            <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="RootElement">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard />
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusedBorder">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused">
                                        <Storyboard />
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid" />
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                Opacity="1">
                                <Grid>
                                    <Border x:Name="ReadOnlyVisualElement"
                                        Background="{StaticResource GrayBrush13}"
                                        Opacity="0" />
                                    <Grid>
                                        <ScrollViewer x:Name="ContentElement"
                                                  BorderThickness="0"
                                                  IsTabStop="False"
                                                  Padding="{TemplateBinding Padding}" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <Border x:Name="FocusedBorder"
                                BorderBrush="{StaticResource CheckBoxBrush}"
                                BorderThickness="1"
                                CornerRadius="2"
                                Opacity="0" />
                            <Border x:Name="DisabledVisualElement"
                                BorderBrush="{StaticResource GrayBrush12}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource GrayBrush12}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                            <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationBrush5}"
                                BorderThickness="1"
                                CornerRadius="1"
                                Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                                   Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CommonValidationToolTipTemplate Style-->
        <!-- If you use AutoCompleteBoxStyle in a separate project-->
        <!--Be sure to include this ControlTemplate xaml for Validation Ux-->
        <!--AutoCompleteBoxStyle has a dependency on it-->
        <!--<ControlTemplate x:Key="CommonValidationToolTipTemplate"
                     TargetType="ToolTip">
            <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="Translation"
                                    X="-25" />
                </Grid.RenderTransform>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="OpenStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="0" />
                            <vsm:VisualTransition GeneratedDuration="0:0:0.2"
                                              To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2"
                                                 To="0"
                                                 Storyboard.TargetProperty="X"
                                                 Storyboard.TargetName="Translation">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3"
                                                  EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2"
                                                 To="1"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="Root" />
                                </Storyboard>
                            </vsm:VisualTransition>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="X"
                                             Storyboard.TargetName="Translation" />
                                <DoubleAnimation Duration="0"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                            </Storyboard>
                        </vsm:VisualState>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Border Background="{StaticResource ValidationBrush1}"
                    CornerRadius="5"
                    Margin="4,4,-4,-4" />
                <Border Background="{StaticResource ValidationBrush2}"
                    CornerRadius="4"
                    Margin="3,3,-3,-3" />
                <Border Background="{StaticResource ValidationBrush3}"
                    CornerRadius="3"
                    Margin="2,2,-2,-2" />
                <Border Background="{StaticResource ValidationBrush4}"
                    CornerRadius="2"
                    Margin="1,1,-1,-1" />
                <Border Background="{StaticResource ValidationBrush5}"
                    CornerRadius="2">
                    <TextBlock Foreground="White"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
                </Border>
            </Grid>
        </ControlTemplate>-->

        <!-- Implicit Styles -->
        <!-- When defining your own styles, set "based on" the same way to keep control theming -->
        <Style TargetType="DataGridColumnHeader"
           BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}" />
        <Style TargetType="DataGridRow"
           BasedOn="{StaticResource DefaultDataGridRowStyle}" />
        <Style TargetType="DataGrid"
           BasedOn="{StaticResource DefaultDataGridStyle}" />
        <Style TargetType="CalendarItem"
           BasedOn="{StaticResource DefaultCalendarItemStyle}" />
        <Style TargetType="Calendar"
           BasedOn="{StaticResource DefaultCalendarStyle}" />
        <Style TargetType="CalendarDayButton"
           BasedOn="{StaticResource DefaultCalendarDayButtonStyle}" />
        <Style TargetType="CalendarButton"
           BasedOn="{StaticResource DefaultCalendarButtonStyle}" />
        <Style TargetType="DatePickerTextBox"
           BasedOn="{StaticResource DefaultDatePickerTextBoxStyle}" />
        <Style TargetType="DatePicker"
           BasedOn="{StaticResource DefaultDatePickerStyle}" />
        <!--<Style TargetType="AutoCompleteBox" BasedOn="{StaticResource DefaultAutoCompleteBoxStyle}" />-->
        <Style TargetType="Label"
           BasedOn="{StaticResource DefaultLabelStyle}" />
        <Style TargetType="GridSplitter"
           BasedOn="{StaticResource DefaultGridSplitterStyle}" />
        <Style TargetType="TabControl"
           BasedOn="{StaticResource DefaultTabControlStyle}" />
        <Style TargetType="TabItem"
           BasedOn="{StaticResource DefaultTabItemStyle}" />
        <Style TargetType="TreeView"
           BasedOn="{StaticResource DefaultTreeViewStyle}" />
        <Style TargetType="TreeViewItem"
           BasedOn="{StaticResource DefaultTreeViewItemStyle}" />




        <!-- ******MAIN PAGE STYLES****** -->
        <!-- **************************** -->

        <Style x:Key="LayoutRootGridStyle"
           TargetType="Grid">
        </Style>

        <Style x:Key="NavigationGridStyle"
           TargetType="Grid">
            <Setter Property="Margin"
                Value="10,10,0,0" />
            <Setter Property="VerticalAlignment"
                Value="Stretch" />
        </Style>

        <Style x:Key="BrandingBorderStyle"
           TargetType="Border">
            <Setter Property="Height"
                Value="Auto" />
            <Setter Property="Margin"
                Value="62,0,20,10" />
            <Setter Property="VerticalAlignment"
                Value="Top" />
            <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        </Style>

        <Style x:Key="BrandingStackPanelStyle"
           TargetType="StackPanel">
            <Setter Property="HorizontalAlignment"
                Value="Stretch" />
            <Setter Property="Orientation"
                Value="Vertical" />
        </Style>

        <Style x:Key="LogoIcon"
           TargetType="ContentControl">
            <Setter Property="Height"
                Value="45" />
            <Setter Property="Width"
                Value="280" />
            <Setter Property="Margin"
                Value="0,0,100,0" />
            <Setter Property="VerticalAlignment"
                Value="Top" />
            <Setter Property="HorizontalAlignment"
                Value="Right" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Grid>
                            <Rectangle Fill="{StaticResource HighlightBrush}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ApplicationNameStyle"
           TargetType="TextBlock">
            <Setter Property="Foreground"
                Value="{StaticResource ApplicationNameBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource HeaderFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ApplicationNameFontSize}" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="Margin"
                Value="43,33,0,0" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
            <Setter Property="HorizontalAlignment"
                Value="Left" />
        </Style>

        <Style x:Key="HeaderTextStyle"
           TargetType="TextBlock">
            <Setter Property="Foreground"
                Value="{StaticResource HighlightBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource HeaderFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource HeaderFontSize}" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="TextWrapping"
                Value="Wrap" />
            <Setter Property="Margin"
                Value="0,15,0,4" />
            <Setter Property="HorizontalAlignment"
                Value="Left" />
        </Style>

        <Style x:Key="PageHyperlinkButtonStyle"
           TargetType="Button">
            <!--<Setter Property="TargetName" Value="_new"/>-->
            <Setter Property="FontSize"
                Value="{StaticResource HyperlinkFontSize}" />
            <Setter Property="FontFamily"
                Value="{StaticResource HeaderFontFamily}" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
        </Style>

        <Style x:Key="LinksBorderStyle"
           TargetType="Border">
            <Setter Property="Height"
                Value="82" />
            <Setter Property="Margin"
                Value="0,156,25,0" />
            <Setter Property="HorizontalAlignment"
                Value="Left" />
            <Setter Property="VerticalAlignment"
                Value="Top" />
            <Setter Property="BorderBrush"
                Value="{StaticResource HighlightBrush}" />
            <Setter Property="BorderThickness"
                Value="30,0,0,0" />
        </Style>

        <Style x:Key="LinksStackPanelStyle"
           TargetType="StackPanel">
            <Setter Property="VerticalAlignment"
                Value="Top" />
            <Setter Property="HorizontalAlignment"
                Value="Left" />
            <Setter Property="Orientation"
                Value="Horizontal" />
            <Setter Property="Margin"
                Value="53,0,0,0" />
        </Style>

        <Style x:Key="LinkStyle"
           TargetType="ToggleButton">
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="BorderBrush"
                Value="{StaticResource NavigationBorderBrush}" />
            <Setter Property="Foreground"
                Value="{StaticResource NavigationForegroundBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource HeaderFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource NavigationFontSize}" />
            <Setter Property="FontWeight"
                Value="Light" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
            <Setter Property="Cursor"
                Value="Hand" />
            <Setter Property="MinHeight"
                Value="28" />
            <Setter Property="MinWidth"
                Value="78" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="HorizontalContentAlignment"
                Value="Center" />
            <Setter Property="Padding"
                Value="8,4,18,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="ButtonGrid"
                          Cursor="{TemplateBinding Cursor}">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="InteractiveElementBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="InteractiveElementBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.95" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="InteractiveBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="InteractiveElementBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="InteractiveElementBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.8" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="InteractiveBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="DisabledOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <HorizontalAlignment>Center</HorizontalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <VerticalAlignment>Center</VerticalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="DisabledOverlay"
                                                                       Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <HorizontalAlignment>Center</HorizontalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="DisabledOverlay"
                                                                       Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <VerticalAlignment>Center</VerticalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="DisabledOverlay"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CheckStates">
                                    <vsm:VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ContentBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unchecked" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border x:Name="ContentBorder"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Opacity="0.4"
                                Padding="0">
                                <ContentPresenter x:Name="ContentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <Border x:Name="InteractiveBorder"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Background="{StaticResource HoverHyperlinkBackgroundBrush}"
                                BorderThickness="1,1,1,1"
                                Opacity="0"
                                BorderBrush="{StaticResource HoverHyperlinkBackgroundBrush}"
                                CornerRadius="0" />
                            <Border x:Name="InteractiveElementBorder"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Visibility="Collapsed">
                                <TextBlock x:Name="InteractiveElement"
                                       Foreground="{StaticResource HoverHyperlinkForegroundBrush}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       Text="{TemplateBinding Content}" />
                            </Border>
                            <TextBlock x:Name="DisabledOverlay"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Content}"
                                   Foreground="#FFAAAAAA"
                                   Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ContentBorderStyle"
           TargetType="Border">
            <Setter Property="Background"
                Value="{StaticResource WhiteColorBrush}" />
            <Setter Property="BorderBrush"
                Value="{StaticResource PageBorderBrush}" />
            <Setter Property="BorderThickness"
                Value="1" />
            <Setter Property="Margin"
                Value="10" />
            <Setter Property="VerticalAlignment"
                Value="Stretch" />
            <Setter Property="HorizontalAlignment"
                Value="Stretch" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10"
                                  Opacity="0.25"
                                  ShadowDepth="0" />
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="ContentFrameStyle" TargetType="navigation:Frame">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="45,195,0,0"/>
        <Setter Property="Padding" Value="58,15,58,15"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>-->

        <Style x:Key="DividerStyle"
           TargetType="Rectangle">
            <Setter Property="Visibility"
                Value="Collapsed" />
        </Style>

        <!-- **STYLE UPDATES FOR NAV TEMPLATE** -->
        <!-- ********************************** -->
        <Style x:Key="NavContentBorderStyle"
           TargetType="Border">
            <Setter Property="Margin"
                Value="45,-42,0,0" />
            <Setter Property="Grid.Row"
                Value="2" />
        </Style>

        <!--<Style x:Key="NavContentFrameStyle" TargetType="navigation:Frame" BasedOn="{StaticResource ContentFrameStyle}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="UriMapper">
            <Setter.Value>
                <uriMapper:UriMapper>
                    <uriMapper:UriMapping MappedUri="/Views/Home.xaml" Uri="" />
                    <uriMapper:UriMapping MappedUri="/Views/{pageName}.xaml" Uri="/{pageName}" />
                    <uriMapper:UriMapping MappedUri="/Views/{pageName}.xaml" Uri="{}{pageName}" />
                </uriMapper:UriMapper>
            </Setter.Value>
        </Setter>
    </Style>-->

        <Style x:Key="NavBrandingBorderStyle"
           TargetType="Border">
            <Setter Property="Margin"
                Value="62,10,11,10" />
        </Style>

        <Style x:Key="NavLinksBorderStyle"
           TargetType="Border"
           BasedOn="{StaticResource LinksBorderStyle}">
            <Setter Property="Margin"
                Value="11,0,10,0" />
            <Setter Property="Grid.Row"
                Value="1" />
        </Style>

        <!-- ******CONTENT PAGE STYLES****** -->
        <!-- ******************************* -->
        <!--<Style x:Key="PageStyle" TargetType="navigation:Page"/>-->

        <Style x:Key="PageScrollViewerStyle"
           TargetType="ScrollViewer">
            <Setter Property="BorderBrush"
                Value="Transparent" />
            <Setter Property="BorderThickness"
                Value="0,1,0,1" />
            <Setter Property="Margin"
                Value="-58,-15,-58,-15" />
            <Setter Property="Padding"
                Value="58,0,58,0" />
            <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility"
                Value="Auto" />
        </Style>

        <Style x:Key="ContentPanelStyle"
           TargetType="StackPanel" />

        <Style x:Key="ContentTextStyle"
           TargetType="TextBlock">
            <Setter Property="Foreground"
                Value="{StaticResource BodyTextColorBrush}" />
            <Setter Property="FontFamily"
                Value="{StaticResource HeaderFontFamily}" />
            <Setter Property="FontSize"
                Value="{StaticResource ContentFontSize}" />
            <Setter Property="TextWrapping"
                Value="Wrap" />
            <Setter Property="Margin"
                Value="0,2,0,2" />
            <Setter Property="HorizontalAlignment"
                Value="Left" />
            <Setter Property="TextOptions.TextHintingMode"
                Value="Animated" />
        </Style>

    <!-- Styles-->

    <Style x:Key="GridBrush" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="White"/>
    </Style>
    

    <Style TargetType="Line">
        <Setter Property="Fill" Value="{DynamicResource FillBrush}" />
        <Setter Property="Height" Value="2" />
        <Setter Property="Width" Value="1000" />
    </Style>

    <Style x:Key="WindowHdrFtrStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource WinHdrFtrFill}"></Setter>
    </Style>

    <Style x:Key="TextMainHdrStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ControlTitleFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
    </Style>

    <Style x:Key="TextHdrFtrStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ControlTitleFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
    </Style>


    <Style x:Key="MainExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="{StaticResource ExpanderFill}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="{StaticResource ControlTitleBigFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
    </Style>

    <Style x:Key="VerticalExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


    <Style x:Key="AppMsgHdrBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="#FFF7EBF8"/>
    </Style>

    <Style x:Key="BigTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4,4,4,4" BorderThickness="{TemplateBinding BorderThickness}" Padding="1,1,1,1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="Shadow">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="6" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="6" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="6" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{StaticResource SecondaryBrush}" CornerRadius="2.5,0,0,0">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.655,0.644">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="3.489" ScaleY="3.489" />
                                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                    <TranslateTransform X="-0.063" Y="-0.025" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop />
                                            <GradientStop Color="#A5FFFFFF" Offset="1" />
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" Grid.Column="1">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,-1.025">
                                            <GradientStop Color="#A5FFFFFF" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" CornerRadius="0,2.5,0,0" Grid.Column="2">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.283,0.71">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.805" ScaleY="2.805" />
                                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                    <TranslateTransform X="0.144" Y="-0.125" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop />
                                            <GradientStop Color="#A5FFFFFF" Offset="1" />
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" Grid.Row="1">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="1,.5" StartPoint="-0.972,0.5">
                                            <GradientStop Color="#00000000" Offset="1" />
                                            <GradientStop Color="#A5FFFFFF" Offset="0" />
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" OpacityMask="#00000000" Grid.Column="1" Grid.Row="1" />
                                <Border Background="{StaticResource SecondaryBrush}" Grid.Column="2" Grid.Row="1">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="2.01,0.5">
                                            <GradientStop Color="#A5FFFFFF" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" CornerRadius="0,0,0,2.5" Grid.Row="2">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.646,0.361">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="3.438" ScaleY="3.438" />
                                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                    <TranslateTransform X="-0.072" Y="0.072" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop />
                                            <GradientStop Color="#A5FFFFFF" Offset="1" />
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" Margin="0,0,0,0" Grid.Column="1" Grid.Row="2">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,2.065" StartPoint="0.5,0">
                                            <GradientStop Color="#00000000" Offset="0" />
                                            <GradientStop Color="#A5FFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Background="{StaticResource SecondaryBrush}" CornerRadius="0,0,2.5,0" Grid.Column="2" Grid.Row="2">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.287,0.495">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="4.282" ScaleY="3.792" />
                                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                    <TranslateTransform X="0.495" Y="-0.463" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop />
                                            <GradientStop Color="#A5FFFFFF" Offset="1" />
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                            <Border SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.RowSpan="1">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,4,0" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15"/>

    <Style TargetType="{x:Type MenuItem}">
        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HighlightOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84"/>
                        </Storyboard>
                        <Storyboard x:Key="HighlightOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="1,1,1,1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="14"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="BackgroundGradientOver" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2"  Opacity="0" Grid.ColumnSpan="4"/>
                            <Rectangle x:Name="BackgroundGradientSelected" Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" Opacity="0" Grid.ColumnSpan="4"/>
                            <Rectangle x:Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1" Grid.ColumnSpan="4" Opacity="0"/>
                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                            <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                            </Grid>

                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" VerticalAlignment="Center"/>

                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>

                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="#FFFFFFFF" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="1"/>

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="6,3,6,3"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="6,3,6,3"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/>
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HighlightOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HighlightOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>